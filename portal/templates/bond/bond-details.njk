{% extends "index.njk" %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/select/macro.njk" import govukSelect %}
{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/date-input/macro.njk" import govukDateInput %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% import './_macros/bond-nav.njk' as bondNav %}

{% block content %}

  {% set showUnissuedFormFieldsByDefault = bond.bondStage === "Unissued" %}
  {% set showIssuedFormFieldsByDefault = bond.bondStage === "Issued" %}

  <script type="text/javascript">
    function toggleFormFields(bondStage) {
      var unissuedFormFields = document.getElementById('unissued-form-fields');
      var issuedFormFields = document.getElementById('issued-form-fields');

      if (bondStage === 'unissued') {
        unissuedFormFields.className = '';
        issuedFormFields.className = 'govuk-visually-hidden';
      }
      if (bondStage === 'issued') {
        issuedFormFields.className = '';
        unissuedFormFields.className = 'govuk-visually-hidden';
      }
    }
  </script>

  {% if validationErrors.count %}
    {{
      govukErrorSummary({
        titleText: "There is a problem",
        errorList: validationErrors.summary
      })
    }}
  {% endif %}

  {{ bondNav.nav(
    completedStatus = bond.completedStatus,
    current = 'bondDetails',
    contractId = dealId,
    childId = bond._id
  )}}

  <hr class="govuk-section-break govuk-section-break--visible govuk-!-margin-bottom-8" />

  <form method="POST" autocomplete="off">

    <div class="govuk-grid-row">

      <div class="govuk-grid-column-three-quarters">

        <div class="govuk-form-group">

          <div class="govuk-character-count" data-module="govuk-character-count" data-maxlength="150">
            <div class="govuk-form-group">
              <label class="govuk-label" for="bondIssuer">
                Bond issuer (optional)
              </label>
              <span id="bond-issuer-hint" class="govuk-hint">
                Only enter if Bond issuer differs from the bank
              </span>

              <div class="govuk-grid-row">
                <div class="govuk-grid-column-one-half">
                  <input class="govuk-input govuk-js-character-count" id="bondIssuer" name="bondIssuer" type="text" maxlength="150" aria-describedby="bond-issuer-hint" value="{{ bond.bondIssuer }}" data-cy="bond-issuer">
                </div>
              </div>
            </div>

            <span id="bond-issuer-info" class="govuk-hint govuk-character-count__message" aria-live="polite">
              You can enter up to 150 characters
            </span>
          </div>
        </div>

        {{ govukSelect({
          id: "bondType",
          name: "bondType",
          label: {
            text: "Bond type"
          },
          attributes: {
            'data-cy': 'bond-type'
          },
          items: [
            {
              text: "Select value"
            },
            {
              text: "Advance payment guarantee",
              value: "Advance payment guarantee",
              selected: bond.bondType === "Advance payment guarantee"
            },
            {
              text: "Bid bond",
              value: "Bid bond",
              selected: bond.bondType === "Bid bond"
            },

            {
              text: "Maintenance bond",
              value: "Maintenance bond",
              selected: bond.bondType === "Maintenance bond"
            },

            {
              text: "Performance bond",
              value: "Performance bond",
              selected: bond.bondType === "Performance bond"
            },

            {
              text: "Progress payment bond",
              value: "Progress payment bond",
              selected: bond.bondType === "Progress payment bond"
            },

            {
              text: "Retention bond",
              value: "Retention bond",
              selected: bond.bondType === "Retention bond"
            },

            {
              text: "Standby letter of credit",
              value: "Standby letter of credit",
              selected: bond.bondType === "Standby letter of credit"
            },

            {
              text: "Warranty letter",
              value: "Warranty letter",
              selected: bond.bondType === "Warranty letter"
            }
          ],
          errorMessage: validationErrors.errorList.bondType and {
            text: validationErrors.errorList.bondType.text,
            attributes: {
              'data-cy': 'bond-type-error-message'
            }
          }

        }) }}

        {{ govukRadios({
          classes: "govuk-radios--inline",
          idPrefix: "bondStage",
          name: "bondStage",
          fieldset: {
            legend: {
              text: "Bond stage"
            }
          },
          items: [
            {
              value: "Unissued",
              text: "Unissued",
              checked: bond.bondStage === "Unissued",
              attributes: {
                'data-cy': "bond-stage-unissued",
                onClick: "toggleFormFields('unissued')"
              }
            },
            {
              value: "Issued",
              text: "Issued",
              checked: bond.bondStage === "Issued",
              attributes: {
                'data-cy': "bond-stage-issued",
                onClick: "toggleFormFields('issued')"
              }
            }
          ],
          errorMessage: validationErrors.errorList.bondStage and {
            text: validationErrors.errorList.bondStage.text,
            attributes: {
              'data-cy': 'bond-stage-error-message'
            }
          }
        }) }}

        <div
          id="unissued-form-fields"
          {% if showUnissuedFormFieldsByDefault === false %}
          class="govuk-visually-hidden"
          {% endif %}
        >
          
          {{ govukInput({
            label: {
              text: "Length of time that the UKEF's guarantee will be in place for (in months, rounded up)"
            },
            classes: "govuk-!-width-one-half",
            id: "ukefGuaranteeInMonths",
            name: "ukefGuaranteeInMonths",
            value: bond.ukefGuaranteeInMonths,
            attributes: {
              'data-cy': 'ukef-guarantee-in-months'
            },
            errorMessage: {
              text: validationErrors.errorList.ukefGuaranteeInMonths.text or (not bond.ukefGuaranteeInMonths and validationErrors.conditionalErrorList.bondStage.Unissued.ukefGuaranteeInMonths.text),
              attributes: {
                'data-cy': 'ukef-guarantee-in-months-error-message'
              }
            }
          }) }}

        </div>

        <div
          id="issued-form-fields"
          {% if showIssuedFormFieldsByDefault === false %}
          class="govuk-visually-hidden"
          {% endif %}
        >

          {{ govukDateInput({
            id: "requestedCoverStartDate",
            namePrefix: "requestedCoverStartDate",
            fieldset: {
              legend: {
                text: "Requested Cover Start Date (optional)"
              }
            },
            hint: {
              html: "<p>For example, 27 11 2019<p>This must be within the next month. If this field is left blank it will default to the later of the Issued date or Inclusion Notice submission date</p>"
            },
            items: [
              {
                classes: "govuk-input--width-2",
                name: "day",
                value: bond['requestedCoverStartDate-day'],
                attributes: {
                  'data-cy': "requestedCoverStartDate-day"
                }
              },
              {
                classes: "govuk-input--width-2",
                name: "month",
                value: bond['requestedCoverStartDate-month'],
                attributes: {
                  'data-cy': "requestedCoverStartDate-month"
                }
              },
              {
                classes: "govuk-input--width-2",
                name: "year",
                value: bond['requestedCoverStartDate-year'],
                attributes: {
                  'data-cy': "requestedCoverStartDate-year"
                }
              }
            ]
          }) }}

          {{ govukDateInput({
            id: "coverEndDate",
            namePrefix: "coverEndDate",
            fieldset: {
              legend: {
                text: "Cover End Date"
              }
            },
            hint: {
              text: "For example, 27 11 2025"
            },
            errorMessage: {
              text: validationErrors.errorList.coverEndDate.text or (not (coverEndDate-day or coverEndDate-month or coverEndDate-year) and validationErrors.conditionalErrorList.bondStage.Issued.coverEndDate.text),
              attributes: {
                'data-cy': "coverEndDate-error-message"
              }
            },
            items: [
              {
                classes: "govuk-input--width-2",
                name: "day",
                value: bond['coverEndDate-day'],
                attributes: {
                  'data-cy': "coverEndDate-day"
                }
              },
              {
                classes: "govuk-input--width-2",
                name: "month",
                value: bond['coverEndDate-month'],
                attributes: {
                  'data-cy': "coverEndDate-month"
                }
              },
              {
                classes: "govuk-input--width-2",
                name: "year",
                value: bond['coverEndDate-year'],
                attributes: {
                  'data-cy': "coverEndDate-year"
                }
              }
            ]
          }) }}

          {{ govukInput({
            label: {
              text: "Bond's unique identification number"
            },
            classes: "govuk-!-width-one-half",
            id: "uniqueIdentificationNumber",
            name: "uniqueIdentificationNumber",
            value: bond.uniqueIdentificationNumber,
            attributes: {
              'data-cy': 'unique-identification-number'
            },
            errorMessage: {
              text: validationErrors.errorList.uniqueIdentificationNumber.text or (not bond.uniqueIdentificationNumber and validationErrors.conditionalErrorList.bondStage.Issued.uniqueIdentificationNumber.text),
              attributes: {
                'data-cy': 'unique-identification-number-error-message'
              }
            }
          }) }}

        </div>


        <div class="govuk-form-group">

          <div class="govuk-character-count" data-module="govuk-character-count" data-maxlength="150">
            <div class="govuk-form-group">
              <label class="govuk-label" for="bondBeneficiary">
                Bond beneficiary (optional)
              </label>
              <span id="bond-beneficiary-hint" class="govuk-hint">
                Only enter if different from (but related to) the overseas buyer in line with the MGA
              </span>

              <div class="govuk-grid-row">
                <div class="govuk-grid-column-one-half">
                  <input class="govuk-input govuk-js-character-count" id="bondBeneficiary" name="bondBeneficiary" type="text" maxlength="150" aria-describedby="bond-beneficiary-info bond-beneficiary-hint" value="{{ bond.bondBeneficiary }}" data-cy="bond-beneficiary">
                </div>
              </div>

            </div>

            <span id="bond-beneficiary-info" class="govuk-hint govuk-character-count__message" aria-live="polite">
              You can enter up to 150 characters
            </span>
          </div>
        </div>
        
      </div>
    </div>

    <button type="submit" class="govuk-button govuk-!-margin-right-1" data-module="govuk-button" data-cy="submit-button">Next page</button>

    <input
      type="submit"
      formaction="/contract/{{ dealId }}/bond/{{ bond._id }}/save-go-back"
      class="govuk-button govuk-button--secondary"
      data-module="govuk-button"
      value="Save and go back to deal"
      data-cy="save-go-back-button"
    />

  </form>

{% endblock %}
