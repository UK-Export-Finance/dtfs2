{"version":3,"file":"ukefexposure.js","mappings":"mCACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACH,oBAAXC,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeJ,EAASC,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeJ,EAAS,aAAc,CAAEK,OAAO,GAAO,G,YCLvD,ICKDC,EAAqBC,SAASC,eAAe,iBAC7CC,EAAyBF,SAASC,eAAe,qBACjDE,EAAoBH,SAASC,eAAe,gBAElD,SAASG,IACP,IDFMC,ECIAC,EAFQP,EAAmBD,MAAMS,QAAQ,KAAM,KAExBL,EAAuBJ,MAAQ,KAE5D,GDduB,SAACA,GACxB,QAAsB,iBAAVA,GAAuBA,IAAUU,OAAOV,KAAUU,OAAOC,SAASX,GAIhF,CCSMY,CAAUJ,GAAc,CAC1B,IAAIK,EAGFA,IDVEN,ECQgCC,EDRhBM,WAAWC,MAAM,KAAK,IAEnCR,EAASS,OAEX,GCKe,EDFG,SAAChB,EAAOiB,GACjC,IAAIC,EAAgBlB,EAChBmB,EAAIF,EASR,OAPKA,IACHE,EAAI,GAGND,GAAaE,KAAAC,IAAI,GAAMF,GACvBD,EAAgBE,KAAKE,MAAMJ,GAC3BA,EAAaE,KAAAC,IAAI,GAAMF,EAEzB,CCTeI,CAAYf,EAAa,GAEzBA,EAGX,IAAMgB,EAAkBX,EAAOY,eAAe,KAAM,CAAEC,sBAAuB,IAE7ErB,EAAkBL,MAAQwB,CAC5B,CACF,CAEIvB,GAAsBG,GACxB,CAACH,EAAoBG,GAAwBuB,SAAQ,SAACC,GACpDA,EAAQC,iBAAiB,QAAQ,WAC/BvB,GACF,GACF,K","sources":["webpack://DTFS_PORTAL/webpack/bootstrap","webpack://DTFS_PORTAL/webpack/runtime/make namespace object","webpack://DTFS_PORTAL/./scripts/number.js","webpack://DTFS_PORTAL/./scripts/ukef-exposure.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const isNumeric = (value) => {\n  if ((typeof value === 'number') && value === Number(value) && Number.isFinite(value)) {\n    return true;\n  }\n  return false;\n};\n\nexport const decimalsCount = (numb) => {\n  const decimals = numb.toString().split('.')[1];\n  if (decimals) {\n    return decimals.length;\n  }\n  return 0;\n};\n\nexport const roundNumber = (value, digits) => {\n  let modifiedValue = value;\n  let d = digits;\n\n  if (!digits) {\n    d = 2;\n  }\n\n  modifiedValue *= 10 ** d;\n  modifiedValue = Math.round(modifiedValue);\n  modifiedValue /= 10 ** d;\n  return modifiedValue;\n};\n","import { isNumeric, decimalsCount, roundNumber } from './number';\n/*\n      calculate UKEF Exposure from Facility Value and Covered Percentage\n    */\n\nconst facilityValueInput = document.getElementById('facilityValue');\nconst coveredPercentageInput = document.getElementById('coveredPercentage');\nconst ukefExposureInput = document.getElementById('ukefExposure');\n\nfunction calculateUkefExposure() {\n  const value = facilityValueInput.value.replace(/,/g, ''); // remove commas\n\n  const calculation = value * (coveredPercentageInput.value / 100);\n\n  if (isNumeric(calculation)) {\n    let result;\n    const totalDecimals = decimalsCount(calculation);\n    if (totalDecimals > 2) {\n      result = roundNumber(calculation, 2);\n    } else {\n      result = calculation;\n    }\n\n    const formattedResult = result.toLocaleString('en', { minimumFractionDigits: 2 });\n\n    ukefExposureInput.value = formattedResult;\n  }\n}\n\nif (facilityValueInput && coveredPercentageInput) {\n  [facilityValueInput, coveredPercentageInput].forEach((element) => {\n    element.addEventListener('blur', () => {\n      calculateUkefExposure();\n    });\n  });\n}\n"],"names":["__webpack_require__","exports","Symbol","toStringTag","Object","defineProperty","value","facilityValueInput","document","getElementById","coveredPercentageInput","ukefExposureInput","calculateUkefExposure","decimals","calculation","replace","Number","isFinite","isNumeric","result","toString","split","length","digits","modifiedValue","d","Math","pow","round","roundNumber","formattedResult","toLocaleString","minimumFractionDigits","forEach","element","addEventListener"],"sourceRoot":""}