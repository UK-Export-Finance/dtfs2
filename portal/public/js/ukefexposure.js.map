{"version":3,"file":"ukefexposure.js","mappings":"kCACA,IAAIA,EAAsB,CCA1BA,EAAwB,SAASC,GACX,oBAAXC,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeJ,EAASC,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeJ,EAAS,aAAc,CAAEK,OAAO,GACvD,G,YCNO,IAAMC,EAAY,SAACD,GACxB,QAAsB,iBAAVA,GAAuBA,IAAUE,OAAOF,KAAUE,OAAOC,SAASH,GAIhF,EAEaI,EAAgB,SAACC,GAC5B,IAAMC,EAAWD,EAAKE,WAAWC,MAAM,KAAK,GAC5C,OAAIF,EACKA,EAASG,OAEX,CACT,EAEaC,EAAc,SAACV,EAAOW,GACjC,IAAIC,EAAgBZ,EAChBa,EAAIF,EASR,OAPKA,IACHE,EAAI,GAGND,GAAaE,KAAAC,IAAI,GAAMF,GACvBD,EAAgBE,KAAKE,MAAMJ,GAC3BA,GAAaE,KAAAC,IAAI,GAAMF,EAEzB,ECtBMI,EAAqBC,SAASC,eAAe,iBAC7CC,EAAyBF,SAASC,eAAe,qBACjDE,EAAoBH,SAASC,eAAe,gBAsB9CF,GAAsBG,GACxB,CAACH,EAAoBG,GAAwBE,SAAQ,SAACC,GACpDA,EAAQC,iBAAiB,QAAQ,YAtBrC,WACE,IAEMC,EAFQR,EAAmBjB,MAAM0B,QAAQ,KAAM,KAExBN,EAAuBpB,MAAQ,KAE5D,GAAIC,EAAUwB,GAAc,CAC1B,IAQME,GAPgBvB,EAAcqB,GAChB,EACTf,EAAYe,EAAa,GAEzBA,GAGoBG,eAAe,KAAM,CAAEC,sBAAuB,IAE7ER,EAAkBrB,MAAQ2B,CAC5B,CACF,CAKMG,EACF,GACF,K","sources":["webpack://DTFS/webpack/bootstrap","webpack://DTFS/webpack/runtime/make namespace object","webpack://DTFS/./scripts/number.js","webpack://DTFS/./scripts/ukef-exposure.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const isNumeric = (value) => {\n  if ((typeof value === 'number') && value === Number(value) && Number.isFinite(value)) {\n    return true;\n  }\n  return false;\n};\n\nexport const decimalsCount = (numb) => {\n  const decimals = numb.toString().split('.')[1];\n  if (decimals) {\n    return decimals.length;\n  }\n  return 0;\n};\n\nexport const roundNumber = (value, digits) => {\n  let modifiedValue = value;\n  let d = digits;\n\n  if (!digits) {\n    d = 2;\n  }\n\n  modifiedValue *= 10 ** d;\n  modifiedValue = Math.round(modifiedValue);\n  modifiedValue /= 10 ** d;\n  return modifiedValue;\n};\n","import { isNumeric, decimalsCount, roundNumber } from './number';\n/*\n      calculate UKEF Exposure from Facility Value and Covered Percentage\n    */\n\nconst facilityValueInput = document.getElementById('facilityValue');\nconst coveredPercentageInput = document.getElementById('coveredPercentage');\nconst ukefExposureInput = document.getElementById('ukefExposure');\n\nfunction calculateUkefExposure() {\n  const value = facilityValueInput.value.replace(/,/g, ''); // remove commas\n\n  const calculation = value * (coveredPercentageInput.value / 100);\n\n  if (isNumeric(calculation)) {\n    let result;\n    const totalDecimals = decimalsCount(calculation);\n    if (totalDecimals > 2) {\n      result = roundNumber(calculation, 2);\n    } else {\n      result = calculation;\n    }\n\n    const formattedResult = result.toLocaleString('en', { minimumFractionDigits: 2 });\n\n    ukefExposureInput.value = formattedResult;\n  }\n}\n\nif (facilityValueInput && coveredPercentageInput) {\n  [facilityValueInput, coveredPercentageInput].forEach((element) => {\n    element.addEventListener('blur', () => {\n      calculateUkefExposure();\n    });\n  });\n}\n"],"names":["__webpack_require__","exports","Symbol","toStringTag","Object","defineProperty","value","isNumeric","Number","isFinite","decimalsCount","numb","decimals","toString","split","length","roundNumber","digits","modifiedValue","d","Math","pow","round","facilityValueInput","document","getElementById","coveredPercentageInput","ukefExposureInput","forEach","element","addEventListener","calculation","replace","formattedResult","toLocaleString","minimumFractionDigits","calculateUkefExposure"],"sourceRoot":""}