{"version":3,"file":"disableFormOnSubmit.js","mappings":"gBAI+BA,MAC7B,MAAMC,EAAQC,SAASC,iBAAiB,QAGlCC,EAAWH,EAAMA,EAAMI,OAAS,GAEtC,IAAKD,EACH,OAGF,IAAIE,GAAe,EAEnBF,EAASG,iBAAiB,UAAWC,IAC/BF,GAEFE,EAAEC,iBAEJH,GAAe,EAECJ,SAASC,iBAAiB,iBAClCO,SAASC,IACfA,EAAOC,aAAa,WAAY,IAChCD,EAAOC,aAAa,gBAAiB,OAAO,GAC5C,GACF,EAGJZ,I","sources":["webpack://DTFS_PORTAL/../libs/common/src/ui-scripts/disableFormOnSubmit.js"],"sourcesContent":["// Prevent multiple form submissions by pressing enter or clicking the submit button\n// The govukButton component has a preventDoubleClick property, but this only debounces in a one-second window,\n// and is therefore not sufficient for our needs as multiple forms take longer than a second to submit.\n\nconst addDisableFormOnSubmit = () => {\n  const forms = document.querySelectorAll('form');\n  // only take the last form on the page, as it is foreseeable to have multiple forms on a page,\n  // and the 'continue' button should always be in the last form on a page.\n  const lastForm = forms[forms.length - 1];\n\n  if (!lastForm) {\n    return;\n  }\n\n  let hasSubmitted = false;\n\n  lastForm.addEventListener('submit', (e) => {\n    if (hasSubmitted) {\n      // prevent multiple form submissions by keyboard\n      e.preventDefault();\n    }\n    hasSubmitted = true;\n\n    const buttons = document.querySelectorAll('.govuk-button');\n    buttons.forEach((button) => {\n      button.setAttribute('disabled', '');\n      button.setAttribute('aria-disabled', 'true');\n    });\n  });\n};\n\naddDisableFormOnSubmit();\n"],"names":["addDisableFormOnSubmit","forms","document","querySelectorAll","lastForm","length","hasSubmitted","addEventListener","e","preventDefault","forEach","button","setAttribute"],"sourceRoot":""}