var DTFS; !(function () {
  const t = { 4(t, e, n) {
    !(function (t) {
      function e(t, e) { if (window.NodeList.prototype.forEach) return t.forEach(e); for (let n = 0; n < t.length; n++)e.call(window, t[n], n, t); } function o() { let t = (new Date()).getTime(); return void 0 !== window.performance && typeof window.performance.now === 'function' && (t += window.performance.now()), 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, ((e) => { const n = (t + 16 * Math.random()) % 16 | 0; return t = Math.floor(t / 16), (e === 'x' ? n : 3 & n | 8).toString(16); })); } function i(t) { this.$module = t, this.moduleId = t.getAttribute('id'), this.$sections = t.querySelectorAll('.govuk-accordion__section'), this.$showAllButton = '', this.browserSupportsSessionStorage = s.checkForSessionStorage(), this.controlsClass = 'govuk-accordion__controls', this.showAllClass = 'govuk-accordion__show-all', this.showAllTextClass = 'govuk-accordion__show-all-text', this.sectionExpandedClass = 'govuk-accordion__section--expanded', this.sectionButtonClass = 'govuk-accordion__section-button', this.sectionHeaderClass = 'govuk-accordion__section-header', this.sectionHeadingClass = 'govuk-accordion__section-heading', this.sectionHeadingTextClass = 'govuk-accordion__section-heading-text', this.sectionHeadingTextFocusClass = 'govuk-accordion__section-heading-text-focus', this.sectionShowHideToggleClass = 'govuk-accordion__section-toggle', this.sectionShowHideToggleFocusClass = 'govuk-accordion__section-toggle-focus', this.sectionShowHideTextClass = 'govuk-accordion__section-toggle-text', this.upChevronIconClass = 'govuk-accordion-nav__chevron', this.downChevronIconClass = 'govuk-accordion-nav__chevron--down', this.sectionSummaryClass = 'govuk-accordion__section-summary', this.sectionSummaryFocusClass = 'govuk-accordion__section-summary-focus'; }(function (t) { let e; let n; let o; let i; 'defineProperty' in Object && (function () { try { const t = {}; return Object.defineProperty(t, 'test', { value: 42 }), !0; } catch (t) { return !1; } }()) || (e = Object.defineProperty, n = Object.prototype.hasOwnProperty('__defineGetter__'), o = 'Getters & setters cannot be defined on this javascript engine', i = 'A property cannot both have accessors and be writable or have a value', Object.defineProperty = function (t, s, r) { if (e && (t === window || t === document || t === Element.prototype || t instanceof Element)) return e(t, s, r); if (t === null || !(t instanceof Object || typeof t === 'object')) throw new TypeError('Object.defineProperty called on non-object'); if (!(r instanceof Object)) throw new TypeError('Property description must be an object'); const a = String(s); const c = 'value' in r || 'writable' in r; const l = 'get' in r && typeof r.get; const u = 'set' in r && typeof r.set; if (l) { if (l !== 'function') throw new TypeError('Getter must be a function'); if (!n) throw new TypeError(o); if (c) throw new TypeError(i); Object.__defineGetter__.call(t, a, r.get); } else t[a] = r.value; if (u) { if (u !== 'function') throw new TypeError('Setter must be a function'); if (!n) throw new TypeError(o); if (c) throw new TypeError(i); Object.__defineSetter__.call(t, a, r.set); } return 'value' in r && (t[a] = r.value), t; }); }).call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { 'bind' in Function.prototype || Object.defineProperty(Function.prototype, 'bind', { value(t) { let e; const n = Array; const o = Object; const i = o.prototype; const s = n.prototype; const r = function () {}; const a = i.toString; const c = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol'; const l = Function.prototype.toString; const u = function (t) { try { return l.call(t), !0; } catch (t) { return !1; } }; const d = '[object Function]'; const h = '[object GeneratorFunction]'; e = function (t) { if (typeof t !== 'function') return !1; if (c) return u(t); const e = a.call(t); return e === d || e === h; }; const p = s.slice; const f = s.concat; const m = s.push; const v = Math.max; const b = this; if (!e(b)) throw new TypeError(`Function.prototype.bind called on incompatible ${b}`); for (var y, g = p.call(arguments, 1), w = function () { if (this instanceof y) { const e = b.apply(this, f.call(g, p.call(arguments))); return o(e) === e ? e : this; } return b.apply(t, f.call(g, p.call(arguments))); }, E = v(0, b.length - g.length), k = [], S = 0; S < E; S++)m.call(k, `$${S}`); return y = Function('binder', `return function (${k.join(',')}){ return binder.apply(this, arguments); }`)(w), b.prototype && (r.prototype = b.prototype, y.prototype = new r(), r.prototype = null), y; } }); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { let e; 'DOMTokenList' in this && (!('classList' in (e = document.createElement('x'))) || !e.classList.toggle('x', !1) && !e.className) || (function (e) { let n; 'DOMTokenList' in e && e.DOMTokenList && (!document.createElementNS || !document.createElementNS('http://www.w3.org/2000/svg', 'svg') || document.createElementNS('http://www.w3.org/2000/svg', 'svg').classList instanceof DOMTokenList) || (e.DOMTokenList = (function () { let e = !0; const n = function (t, n, o, i) { Object.defineProperty ? Object.defineProperty(t, n, { configurable: !1 === e || !!i, get: o }) : t.__defineGetter__(n, o); }; try { n({}, 'support'); } catch (t) { e = !1; } const o = function (e, o) { const i = this; let s = []; let r = {}; let a = 0; let c = 0; const l = function (t) { n(i, t, (() => (d(), s[t])), !1); }; const u = function () { if (a >= c) for (;c < a; ++c)l(c); }; var d = function () { let t; let n; const i = arguments; const c = /\s+/; if (i.length) for (n = 0; n < i.length; ++n) if (c.test(i[n])) throw (t = new SyntaxError(`String "${i[n]}" contains an invalid character`)).code = 5, t.name = 'InvalidCharacterError', t; for ((s = typeof e[o] === 'object' ? (`${e[o].baseVal}`).replace(/^\s+|\s+$/g, '').split(c) : (`${e[o]}`).replace(/^\s+|\s+$/g, '').split(c))[0] === '' && (s = []), r = {}, n = 0; n < s.length; ++n)r[s[n]] = !0; a = s.length, u(); }; return d(), n(i, 'length', (() => (d(), a))), i.toLocaleString = i.toString = function () { return d(), s.join(' '); }, i.item = function (t) { return d(), s[t]; }, i.contains = function (t) { return d(), !!r[t]; }, i.add = function () { d.apply(i, t = arguments); for (var t, n, c = 0, l = t.length; c < l; ++c)n = t[c], r[n] || (s.push(n), r[n] = !0); a !== s.length && (a = s.length >>> 0, typeof e[o] === 'object' ? e[o].baseVal = s.join(' ') : e[o] = s.join(' '), u()); }, i.remove = function () { d.apply(i, t = arguments); for (var t, n = {}, c = 0, l = []; c < t.length; ++c)n[t[c]] = !0, delete r[t[c]]; for (c = 0; c < s.length; ++c)n[s[c]] || l.push(s[c]); s = l, a = l.length >>> 0, typeof e[o] === 'object' ? e[o].baseVal = s.join(' ') : e[o] = s.join(' '), u(); }, i.toggle = function (e, n) { return d.apply(i, [e]), t !== n ? n ? (i.add(e), !0) : (i.remove(e), !1) : r[e] ? (i.remove(e), !1) : (i.add(e), !0); }, i; }; return o; }())), 'classList' in (n = document.createElement('span')) && (n.classList.toggle('x', !1), n.classList.contains('x') && (n.classList.constructor.prototype.toggle = function (e) { let n = arguments[1]; if (n === t) { const o = !this.contains(e); return this[o ? 'add' : 'remove'](e), o; } return this[(n = !!n) ? 'add' : 'remove'](e), n; })), (function () { const t = document.createElement('span'); if ('classList' in t && (t.classList.add('a', 'b'), !t.classList.contains('b'))) { const e = t.classList.constructor.prototype.add; t.classList.constructor.prototype.add = function () { for (let t = arguments, n = arguments.length, o = 0; o < n; o++)e.call(this, t[o]); }; } }()), (function () { const t = document.createElement('span'); if ('classList' in t && (t.classList.add('a'), t.classList.add('b'), t.classList.remove('a', 'b'), t.classList.contains('b'))) { const e = t.classList.constructor.prototype.remove; t.classList.constructor.prototype.remove = function () { for (let t = arguments, n = arguments.length, o = 0; o < n; o++)e.call(this, t[o]); }; } }()); }(this)); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { 'Document' in this || typeof WorkerGlobalScope === 'undefined' && typeof importScripts !== 'function' && (this.HTMLDocument ? this.Document = this.HTMLDocument : (this.Document = this.HTMLDocument = document.constructor = new Function('return function Document() {}')(), this.Document.prototype = document)); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { 'Element' in this && 'HTMLElement' in this || (function () { if (!window.Element || window.HTMLElement) { window.Element = window.HTMLElement = new Function('return function Element() {}')(); var t; const e = document.appendChild(document.createElement('body')); const n = e.appendChild(document.createElement('iframe')).contentWindow.document; const o = Element.prototype = n.appendChild(n.createElement('*')); const i = {}; var s = function (t, e) { let n; let o; let r; const a = t.childNodes || []; let c = -1; if (t.nodeType === 1 && t.constructor !== Element) for (n in t.constructor = Element, i)o = i[n], t[n] = o; for (;r = e && a[++c];)s(r, e); return t; }; const r = document.getElementsByTagName('*'); const a = document.createElement; var c = 100; o.attachEvent('onpropertychange', ((t) => { for (var e, n = t.propertyName, s = !i.hasOwnProperty(n), a = o[n], c = i[n], l = -1; e = r[++l];)e.nodeType === 1 && (s || e[n] === c) && (e[n] = a); i[n] = a; })), o.constructor = Element, o.hasAttribute || (o.hasAttribute = function (t) { return this.getAttribute(t) !== null; }), l() || (document.onreadystatechange = l, t = setInterval(l, 25)), document.createElement = function (t) { const e = a(String(t).toLowerCase()); return s(e); }, document.removeChild(e); } else window.HTMLElement = window.Element; function l() { return c-- || clearTimeout(t), !(!document.body || document.body.prototype || !/(complete|interactive)/.test(document.readyState) || (s(document, !0), t && document.body.prototype && clearTimeout(t), !document.body.prototype)); } }()); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { let e; 'document' in this && 'classList' in document.documentElement && 'Element' in this && 'classList' in Element.prototype && ((e = document.createElement('span')).classList.add('a', 'b'), e.classList.contains('b')) || (function (t) { let e = !0; const n = function (t, n, o, i) { Object.defineProperty ? Object.defineProperty(t, n, { configurable: !1 === e || !!i, get: o }) : t.__defineGetter__(n, o); }; try { n({}, 'support'); } catch (t) { e = !1; } var o = function (t, i, s) { n(t.prototype, i, (function () { let t; const r = this; const a = `__defineGetter__DEFINE_PROPERTY${i}`; if (r[a]) return t; if (r[a] = !0, !1 === e) { for (var c, l = o.mirror || document.createElement('div'), u = l.childNodes, d = u.length, h = 0; h < d; ++h) if (u[h]._R === r) { c = u[h]; break; }c || (c = l.appendChild(document.createElement('div'))), t = DOMTokenList.call(c, r, s); } else t = new DOMTokenList(r, s); return n(r, i, (() => t)), delete r[a], t; }), !0); }; o(t.Element, 'classList', 'className'), o(t.HTMLElement, 'classList', 'className'), o(t.HTMLLinkElement, 'relList', 'rel'), o(t.HTMLAnchorElement, 'relList', 'rel'), o(t.HTMLAreaElement, 'relList', 'rel'); }(this)); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), i.prototype.init = function () { if (this.$module) { this.initControls(), this.initSectionHeaders(); const t = this.checkIfAllSectionsOpen(); this.updateShowAllButton(t); } }, i.prototype.initControls = function () { this.$showAllButton = document.createElement('button'), this.$showAllButton.setAttribute('type', 'button'), this.$showAllButton.setAttribute('class', this.showAllClass), this.$showAllButton.setAttribute('aria-expanded', 'false'); const t = document.createElement('span'); t.classList.add(this.upChevronIconClass), this.$showAllButton.appendChild(t); const e = document.createElement('div'); e.setAttribute('class', this.controlsClass), e.appendChild(this.$showAllButton), this.$module.insertBefore(e, this.$module.firstChild); const n = document.createElement('span'); n.classList.add(this.showAllTextClass), this.$showAllButton.appendChild(n), this.$showAllButton.addEventListener('click', this.onShowOrHideAllToggle.bind(this)); }, i.prototype.initSectionHeaders = function () { e(this.$sections, (t, e) => { const n = t.querySelector(`.${this.sectionHeaderClass}`); this.constructHeaderMarkup(n, e), this.setExpanded(this.isExpanded(t), t), n.addEventListener('click', this.onSectionToggle.bind(this, t)), this.setInitialState(t); }); }, i.prototype.constructHeaderMarkup = function (t, e) { const n = t.querySelector(`.${this.sectionButtonClass}`); const o = t.querySelector(`.${this.sectionHeadingClass}`); const i = t.querySelector(`.${this.sectionSummaryClass}`); const s = document.createElement('button'); s.setAttribute('type', 'button'), s.setAttribute('aria-controls', `${this.moduleId}-content-${e + 1}`); for (let r = 0; r < n.attributes.length; r++) { const a = n.attributes.item(r); a.nodeName !== 'id' && s.setAttribute(a.nodeName, a.nodeValue); } const c = document.createElement('span'); c.classList.add(this.sectionHeadingTextClass), c.id = n.id; const l = document.createElement('span'); l.classList.add(this.sectionHeadingTextFocusClass), c.appendChild(l), l.innerHTML = n.innerHTML; const u = document.createElement('span'); u.classList.add(this.sectionShowHideToggleClass), u.setAttribute('data-nosnippet', ''); const d = document.createElement('span'); d.classList.add(this.sectionShowHideToggleFocusClass), u.appendChild(d); const h = document.createElement('span'); const p = document.createElement('span'); if (p.classList.add(this.upChevronIconClass), d.appendChild(p), h.classList.add(this.sectionShowHideTextClass), d.appendChild(h), s.appendChild(c), s.appendChild(this.getButtonPunctuationEl()), i != null) { const f = document.createElement('span'); const m = document.createElement('span'); m.classList.add(this.sectionSummaryFocusClass), f.appendChild(m); for (let v = 0, b = i.attributes.length; v < b; ++v) { const y = i.attributes.item(v).nodeName; const g = i.attributes.item(v).nodeValue; f.setAttribute(y, g); }m.innerHTML = i.innerHTML, i.parentNode.replaceChild(f, i), s.appendChild(f), s.appendChild(this.getButtonPunctuationEl()); }s.appendChild(u), o.removeChild(n), o.appendChild(s); }, i.prototype.onSectionToggle = function (t) { const e = this.isExpanded(t); this.setExpanded(!e, t), this.storeState(t); }, i.prototype.onShowOrHideAllToggle = function () { const t = this; const n = this.$sections; const o = !this.checkIfAllSectionsOpen(); e(n, ((e) => { t.setExpanded(o, e), t.storeState(e); })), t.updateShowAllButton(o); }, i.prototype.setExpanded = function (t, e) { const n = e.querySelector(`.${this.upChevronIconClass}`); const o = e.querySelector(`.${this.sectionShowHideTextClass}`); const i = e.querySelector(`.${this.sectionButtonClass}`); const s = t ? 'Hide' : 'Show'; const r = document.createElement('span'); r.classList.add('govuk-visually-hidden'), r.innerHTML = ' this section', o.innerHTML = s, o.appendChild(r), i.setAttribute('aria-expanded', t), t ? (e.classList.add(this.sectionExpandedClass), n.classList.remove(this.downChevronIconClass)) : (e.classList.remove(this.sectionExpandedClass), n.classList.add(this.downChevronIconClass)); const a = this.checkIfAllSectionsOpen(); this.updateShowAllButton(a); }, i.prototype.isExpanded = function (t) { return t.classList.contains(this.sectionExpandedClass); }, i.prototype.checkIfAllSectionsOpen = function () { return this.$sections.length === this.$module.querySelectorAll(`.${this.sectionExpandedClass}`).length; }, i.prototype.updateShowAllButton = function (t) { const e = this.$showAllButton.querySelector(`.${this.upChevronIconClass}`); const n = this.$showAllButton.querySelector(`.${this.showAllTextClass}`); const o = t ? 'Hide all sections' : 'Show all sections'; this.$showAllButton.setAttribute('aria-expanded', t), n.innerHTML = o, t ? e.classList.remove(this.downChevronIconClass) : e.classList.add(this.downChevronIconClass); }; var s = { checkForSessionStorage() { let t; const e = 'this is the test string'; try { return window.sessionStorage.setItem(e, e), t = window.sessionStorage.getItem(e) === e.toString(), window.sessionStorage.removeItem(e), t; } catch (t) { typeof console !== 'undefined' && void 0 !== console.log || console.log('Notice: sessionStorage not available.'); } } }; i.prototype.storeState = function (t) { if (this.browserSupportsSessionStorage) { const e = t.querySelector(`.${this.sectionButtonClass}`); if (e) { const n = e.getAttribute('aria-controls'); const o = e.getAttribute('aria-expanded'); void 0 !== n || typeof console !== 'undefined' && void 0 !== console.log || console.error(new Error('No aria controls present in accordion section heading.')), void 0 !== o || typeof console !== 'undefined' && void 0 !== console.log || console.error(new Error('No aria expanded present in accordion section heading.')), n && o && window.sessionStorage.setItem(n, o); } } }, i.prototype.setInitialState = function (t) { if (this.browserSupportsSessionStorage) { const e = t.querySelector(`.${this.sectionButtonClass}`); if (e) { const n = e.getAttribute('aria-controls'); const o = n ? window.sessionStorage.getItem(n) : null; o !== null && this.setExpanded(o === 'true', t); } } }, i.prototype.getButtonPunctuationEl = function () { const t = document.createElement('span'); return t.classList.add('govuk-visually-hidden', 'govuk-accordion__section-heading-divider'), t.innerHTML = ', ', t; }, function (t) { 'Window' in this || typeof WorkerGlobalScope === 'undefined' && typeof importScripts !== 'function' && (function (t) { t.constructor ? t.Window = t.constructor : (t.Window = t.constructor = new Function('return function Window() {}')()).prototype = this; }(this)); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { const e = (function (t) { if (!('Event' in t)) return !1; if (typeof t.Event === 'function') return !0; try { return new Event('click'), !0; } catch (t) { return !1; } }(this)); e || (function () { const e = { click: 1, dblclick: 1, keyup: 1, keypress: 1, keydown: 1, mousedown: 1, mouseup: 1, mousemove: 1, mouseover: 1, mouseenter: 1, mouseleave: 1, mouseout: 1, storage: 1, storagecommit: 1, textinput: 1 }; if (typeof document !== 'undefined' && typeof window !== 'undefined') { const n = window.Event && window.Event.prototype || null; window.Event = Window.prototype.Event = function (e, n) { if (!e) throw new Error('Not enough arguments'); let o; if ('createEvent' in document) { o = document.createEvent('Event'); const i = !(!n || n.bubbles === t) && n.bubbles; const s = !(!n || n.cancelable === t) && n.cancelable; return o.initEvent(e, i, s), o; } return (o = document.createEventObject()).type = e, o.bubbles = !(!n || n.bubbles === t) && n.bubbles, o.cancelable = !(!n || n.cancelable === t) && n.cancelable, o; }, n && Object.defineProperty(window.Event, 'prototype', { configurable: !1, enumerable: !1, writable: !0, value: n }), 'createEvent' in document || (window.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function () { const t = this; const n = arguments[0]; const i = arguments[1]; if (t === window && n in e) throw new Error(`In IE8 the event: ${n} is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.`); t._events || (t._events = {}), t._events[n] || (t._events[n] = function (e) { let n; const i = t._events[e.type].list; const s = i.slice(); let r = -1; const a = s.length; for (e.preventDefault = function () { !1 !== e.cancelable && (e.returnValue = !1); }, e.stopPropagation = function () { e.cancelBubble = !0; }, e.stopImmediatePropagation = function () { e.cancelBubble = !0, e.cancelImmediate = !0; }, e.currentTarget = t, e.relatedTarget = e.fromElement || null, e.target = e.target || e.srcElement || t, e.timeStamp = (new Date()).getTime(), e.clientX && (e.pageX = e.clientX + document.documentElement.scrollLeft, e.pageY = e.clientY + document.documentElement.scrollTop); ++r < a && !e.cancelImmediate;)r in s && o(i, n = s[r]) !== -1 && typeof n === 'function' && n.call(t, e); }, t._events[n].list = [], t.attachEvent && t.attachEvent(`on${n}`, t._events[n])), t._events[n].list.push(i); }, window.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function () { let t; const e = this; const n = arguments[0]; const i = arguments[1]; e._events && e._events[n] && e._events[n].list && (t = o(e._events[n].list, i)) !== -1 && (e._events[n].list.splice(t, 1), e._events[n].list.length || (e.detachEvent && e.detachEvent(`on${n}`, e._events[n]), delete e._events[n])); }, window.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function (t) { if (!arguments.length) throw new Error('Not enough arguments'); if (!t || typeof t.type !== 'string') throw new Error('DOM Events Exception 0'); let e = this; const n = t.type; try { if (!t.bubbles) { t.cancelBubble = !0; var o = function (t) { t.cancelBubble = !0, (e || window).detachEvent(`on${n}`, o); }; this.attachEvent(`on${n}`, o); } this.fireEvent(`on${n}`, t); } catch (o) { t.target = e; do { t.currentTarget = e, '_events' in e && typeof e._events[n] === 'function' && e._events[n].call(e, t), typeof e[`on${n}`] === 'function' && e[`on${n}`].call(e, t), e = e.nodeType === 9 ? e.parentWindow : e.parentNode; } while (e && !t.cancelBubble); } return !0; }, document.attachEvent('onreadystatechange', (() => { document.readyState === 'complete' && document.dispatchEvent(new Event('DOMContentLoaded', { bubbles: !0 })); }))); } function o(t, e) { for (let n = -1, o = t.length; ++n < o;) if (n in t && t[n] === e) return n; return -1; } }()); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}); const r = 32; const a = 1; function c(t) { this.$module = t, this.debounceFormSubmitTimer = null; }c.prototype.handleKeyDown = function (t) { const e = t.target; e.getAttribute('role') === 'button' && t.keyCode === r && (t.preventDefault(), e.click()); }, c.prototype.debounce = function (t) { if (t.target.getAttribute('data-prevent-double-click') === 'true') return this.debounceFormSubmitTimer ? (t.preventDefault(), !1) : void (this.debounceFormSubmitTimer = setTimeout(() => { this.debounceFormSubmitTimer = null; }, 1e3 * a)); }, c.prototype.init = function () { this.$module.addEventListener('keydown', this.handleKeyDown), this.$module.addEventListener('click', this.debounce); }; const l = 13; const u = 32; function d(t) { this.$module = t; } function h(t) { this.$module = t, this.$textarea = t.querySelector('.govuk-js-character-count'), this.$textarea && (this.$countMessage = document.getElementById(`${this.$textarea.id}-info`)); } function p(t) { this.$module = t, this.$inputs = t.querySelectorAll('input[type="checkbox"]'); } function f(t) { this.$module = t; } function m(t) { this.$module = t; } function v(t) { this.$module = t, this.$menuButton = t && t.querySelector('.govuk-js-header-toggle'), this.$menu = this.$menuButton && t.querySelector(`#${this.$menuButton.getAttribute('aria-controls')}`); } function b(t) { this.$module = t, this.$inputs = t.querySelectorAll('input[type="radio"]'); } function y(t) { this.$module = t, this.$linkedElement = null, this.linkedElementListener = !1; } function g(t) { this.$module = t, this.$tabs = t.querySelectorAll('.govuk-tabs__tab'), this.keys = { left: 37, right: 39, up: 38, down: 40 }, this.jsHiddenClass = 'govuk-tabs__panel--hidden'; } function w(t) { const n = void 0 !== (t = void 0 !== t ? t : {}).scope ? t.scope : document; e(n.querySelectorAll('[data-module="govuk-button"]'), ((t) => { new c(t).init(); })), e(n.querySelectorAll('[data-module="govuk-accordion"]'), ((t) => { new i(t).init(); })), e(n.querySelectorAll('[data-module="govuk-details"]'), ((t) => { new d(t).init(); })), e(n.querySelectorAll('[data-module="govuk-character-count"]'), ((t) => { new h(t).init(); })), e(n.querySelectorAll('[data-module="govuk-checkboxes"]'), ((t) => { new p(t).init(); })), new f(n.querySelector('[data-module="govuk-error-summary"]')).init(), new v(n.querySelector('[data-module="govuk-header"]')).init(), e(n.querySelectorAll('[data-module="govuk-notification-banner"]'), ((t) => { new m(t).init(); })), e(n.querySelectorAll('[data-module="govuk-radios"]'), ((t) => { new b(t).init(); })), new y(n.querySelector('[data-module="govuk-skip-link"]')).init(), e(n.querySelectorAll('[data-module="govuk-tabs"]'), ((t) => { new g(t).init(); })); }d.prototype.init = function () { this.$module && (typeof this.$module.open === 'boolean' || this.polyfillDetails()); }, d.prototype.polyfillDetails = function () { const t = this.$module; const e = this.$summary = t.getElementsByTagName('summary').item(0); const n = this.$content = t.getElementsByTagName('div').item(0); e && n && (n.id || (n.id = `details-content-${o()}`), t.setAttribute('role', 'group'), e.setAttribute('role', 'button'), e.setAttribute('aria-controls', n.id), e.tabIndex = 0, !0 == (t.getAttribute('open') !== null) ? (e.setAttribute('aria-expanded', 'true'), n.setAttribute('aria-hidden', 'false')) : (e.setAttribute('aria-expanded', 'false'), n.setAttribute('aria-hidden', 'true'), n.style.display = 'none'), this.polyfillHandleInputs(e, this.polyfillSetAttributes.bind(this))); }, d.prototype.polyfillSetAttributes = function () { const t = this.$module; const e = this.$summary; const n = this.$content; const o = e.getAttribute('aria-expanded') === 'true'; const i = n.getAttribute('aria-hidden') === 'true'; return e.setAttribute('aria-expanded', o ? 'false' : 'true'), n.setAttribute('aria-hidden', i ? 'false' : 'true'), n.style.display = o ? 'none' : '', t.getAttribute('open') !== null ? t.removeAttribute('open') : t.setAttribute('open', 'open'), !0; }, d.prototype.polyfillHandleInputs = function (t, e) { t.addEventListener('keypress', ((t) => { const n = t.target; t.keyCode !== l && t.keyCode !== u || n.nodeName.toLowerCase() === 'summary' && (t.preventDefault(), n.click ? n.click() : e(t)); })), t.addEventListener('keyup', ((t) => { const e = t.target; t.keyCode === u && e.nodeName.toLowerCase() === 'summary' && t.preventDefault(); })), t.addEventListener('click', e); }, h.prototype.defaults = { characterCountAttribute: 'data-maxlength', wordCountAttribute: 'data-maxwords' }, h.prototype.init = function () { const t = this.$module; const e = this.$textarea; const n = this.$countMessage; if (e && n) { e.insertAdjacentElement('afterend', n), this.options = this.getDataset(t); let o = this.defaults.characterCountAttribute; this.options.maxwords && (o = this.defaults.wordCountAttribute), this.maxLength = t.getAttribute(o), this.maxLength && (t.removeAttribute('maxlength'), 'onpageshow' in window ? window.addEventListener('pageshow', this.sync.bind(this)) : window.addEventListener('DOMContentLoaded', this.sync.bind(this)), this.sync()); } }, h.prototype.sync = function () { this.bindChangeEvents(), this.updateCountMessage(); }, h.prototype.getDataset = function (t) { const e = {}; const n = t.attributes; if (n) for (let o = 0; o < n.length; o++) { const i = n[o]; const s = i.name.match(/^data-(.+)/); s && (e[s[1]] = i.value); } return e; }, h.prototype.count = function (t) { return this.options.maxwords ? (t.match(/\S+/g) || []).length : t.length; }, h.prototype.bindChangeEvents = function () { const t = this.$textarea; t.addEventListener('keyup', this.checkIfValueChanged.bind(this)), t.addEventListener('focus', this.handleFocus.bind(this)), t.addEventListener('blur', this.handleBlur.bind(this)); }, h.prototype.checkIfValueChanged = function () { this.$textarea.oldValue || (this.$textarea.oldValue = ''), this.$textarea.value !== this.$textarea.oldValue && (this.$textarea.oldValue = this.$textarea.value, this.updateCountMessage()); }, h.prototype.updateCountMessage = function () { const t = this.$textarea; const e = this.options; const n = this.$countMessage; const o = this.count(t.value); const i = this.maxLength; const s = i - o; i * (e.threshold ? e.threshold : 0) / 100 > o ? (n.classList.add('govuk-character-count__message--disabled'), n.setAttribute('aria-hidden', !0)) : (n.classList.remove('govuk-character-count__message--disabled'), n.removeAttribute('aria-hidden')), s < 0 ? (t.classList.add('govuk-textarea--error'), n.classList.remove('govuk-hint'), n.classList.add('govuk-error-message')) : (t.classList.remove('govuk-textarea--error'), n.classList.remove('govuk-error-message'), n.classList.add('govuk-hint')); let r = 'remaining'; let a = 'character'; let c = s; e.maxwords && (a = 'word'), a += s === -1 || s === 1 ? '' : 's', r = s < 0 ? 'too many' : 'remaining', c = Math.abs(s), n.innerHTML = `You have ${c} ${a} ${r}`; }, h.prototype.handleFocus = function () { this.valueChecker = setInterval(this.checkIfValueChanged.bind(this), 1e3); }, h.prototype.handleBlur = function () { clearInterval(this.valueChecker); }, p.prototype.init = function () { const t = this.$module; e(this.$inputs, ((t) => { const e = t.getAttribute('data-aria-controls'); e && document.getElementById(e) && (t.setAttribute('aria-controls', e), t.removeAttribute('data-aria-controls')); })), 'onpageshow' in window ? window.addEventListener('pageshow', this.syncAllConditionalReveals.bind(this)) : window.addEventListener('DOMContentLoaded', this.syncAllConditionalReveals.bind(this)), this.syncAllConditionalReveals(), t.addEventListener('click', this.handleClick.bind(this)); }, p.prototype.syncAllConditionalReveals = function () { e(this.$inputs, this.syncConditionalRevealWithInputState.bind(this)); }, p.prototype.syncConditionalRevealWithInputState = function (t) { const e = document.getElementById(t.getAttribute('aria-controls')); if (e && e.classList.contains('govuk-checkboxes__conditional')) { const n = t.checked; t.setAttribute('aria-expanded', n), e.classList.toggle('govuk-checkboxes__conditional--hidden', !n); } }, p.prototype.unCheckAllInputsExcept = function (t) { e(document.querySelectorAll(`input[type="checkbox"][name="${t.name}"]`), (e) => { t.form === e.form && e !== t && (e.checked = !1, this.syncConditionalRevealWithInputState(e)); }); }, p.prototype.unCheckExclusiveInputs = function (t) { e(document.querySelectorAll(`input[data-behaviour="exclusive"][type="checkbox"][name="${t.name}"]`), (e) => { t.form === e.form && (e.checked = !1, this.syncConditionalRevealWithInputState(e)); }); }, p.prototype.handleClick = function (t) { const e = t.target; e.type === 'checkbox' && (e.getAttribute('aria-controls') && this.syncConditionalRevealWithInputState(e), e.checked && (e.getAttribute('data-behaviour') === 'exclusive' ? this.unCheckAllInputsExcept(e) : this.unCheckExclusiveInputs(e))); }, function (t) { 'document' in this && 'matches' in document.documentElement || (Element.prototype.matches = Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || function (t) { for (var e = this, n = (e.document || e.ownerDocument).querySelectorAll(t), o = 0; n[o] && n[o] !== e;)++o; return !!n[o]; }); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { 'document' in this && 'closest' in document.documentElement || (Element.prototype.closest = function (t) { for (let e = this; e;) { if (e.matches(t)) return e; e = 'SVGElement' in window && e instanceof SVGElement ? e.parentNode : e.parentElement; } return null; }); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), f.prototype.init = function () { const t = this.$module; t && (this.setFocus(), t.addEventListener('click', this.handleClick.bind(this))); }, f.prototype.setFocus = function () { const t = this.$module; t.getAttribute('data-disable-auto-focus') !== 'true' && (t.setAttribute('tabindex', '-1'), t.addEventListener('blur', (() => { t.removeAttribute('tabindex'); })), t.focus()); }, f.prototype.handleClick = function (t) { const e = t.target; this.focusTarget(e) && t.preventDefault(); }, f.prototype.focusTarget = function (t) { if (t.tagName !== 'A' || !1 === t.href) return !1; const e = this.getFragmentFromUrl(t.href); const n = document.getElementById(e); if (!n) return !1; const o = this.getAssociatedLegendOrLabel(n); return !!o && (o.scrollIntoView(), n.focus({ preventScroll: !0 }), !0); }, f.prototype.getFragmentFromUrl = function (t) { return t.indexOf('#') !== -1 && t.split('#').pop(); }, f.prototype.getAssociatedLegendOrLabel = function (t) { const e = t.closest('fieldset'); if (e) { const n = e.getElementsByTagName('legend'); if (n.length) { const o = n[0]; if (t.type === 'checkbox' || t.type === 'radio') return o; const i = o.getBoundingClientRect().top; const s = t.getBoundingClientRect(); if (s.height && window.innerHeight && s.top + s.height - i < window.innerHeight / 2) return o; } } return document.querySelector(`label[for='${t.getAttribute('id')}']`) || t.closest('label'); }, m.prototype.init = function () { this.$module && this.setFocus(); }, m.prototype.setFocus = function () { const t = this.$module; t.getAttribute('data-disable-auto-focus') !== 'true' && t.getAttribute('role') === 'alert' && (t.getAttribute('tabindex') || (t.setAttribute('tabindex', '-1'), t.addEventListener('blur', (() => { t.removeAttribute('tabindex'); }))), t.focus()); }, v.prototype.init = function () { this.$module && this.$menuButton && this.$menu && (this.syncState(this.$menu.classList.contains('govuk-header__navigation-list--open')), this.$menuButton.addEventListener('click', this.handleMenuButtonClick.bind(this))); }, v.prototype.syncState = function (t) { this.$menuButton.classList.toggle('govuk-header__menu-button--open', t), this.$menuButton.setAttribute('aria-expanded', t); }, v.prototype.handleMenuButtonClick = function () { const t = this.$menu.classList.toggle('govuk-header__navigation-list--open'); this.syncState(t); }, b.prototype.init = function () { const t = this.$module; e(this.$inputs, ((t) => { const e = t.getAttribute('data-aria-controls'); e && document.getElementById(e) && (t.setAttribute('aria-controls', e), t.removeAttribute('data-aria-controls')); })), 'onpageshow' in window ? window.addEventListener('pageshow', this.syncAllConditionalReveals.bind(this)) : window.addEventListener('DOMContentLoaded', this.syncAllConditionalReveals.bind(this)), this.syncAllConditionalReveals(), t.addEventListener('click', this.handleClick.bind(this)); }, b.prototype.syncAllConditionalReveals = function () { e(this.$inputs, this.syncConditionalRevealWithInputState.bind(this)); }, b.prototype.syncConditionalRevealWithInputState = function (t) { const e = document.getElementById(t.getAttribute('aria-controls')); if (e && e.classList.contains('govuk-radios__conditional')) { const n = t.checked; t.setAttribute('aria-expanded', n), e.classList.toggle('govuk-radios__conditional--hidden', !n); } }, b.prototype.handleClick = function (t) { const n = t.target; n.type === 'radio' && e(document.querySelectorAll('input[type="radio"][aria-controls]'), (t) => { const e = t.form === n.form; t.name === n.name && e && this.syncConditionalRevealWithInputState(t); }); }, y.prototype.init = function () { this.$module && (this.$linkedElement = this.getLinkedElement(), this.$linkedElement && this.$module.addEventListener('click', this.focusLinkedElement.bind(this))); }, y.prototype.getLinkedElement = function () { const t = this.getFragmentFromUrl(); return !!t && document.getElementById(t); }, y.prototype.focusLinkedElement = function () { const t = this.$linkedElement; t.getAttribute('tabindex') || (t.setAttribute('tabindex', '-1'), t.classList.add('govuk-skip-link-focused-element'), this.linkedElementListener || (this.$linkedElement.addEventListener('blur', this.removeFocusProperties.bind(this)), this.linkedElementListener = !0)), t.focus(); }, y.prototype.removeFocusProperties = function () { this.$linkedElement.removeAttribute('tabindex'), this.$linkedElement.classList.remove('govuk-skip-link-focused-element'); }, y.prototype.getFragmentFromUrl = function () { return !!this.$module.hash && this.$module.hash.split('#').pop(); }, function (t) { 'document' in this && 'nextElementSibling' in document.documentElement || Object.defineProperty(Element.prototype, 'nextElementSibling', { get() { for (var t = this.nextSibling; t && t.nodeType !== 1;)t = t.nextSibling; return t; } }); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), function (t) { 'document' in this && 'previousElementSibling' in document.documentElement || Object.defineProperty(Element.prototype, 'previousElementSibling', { get() { for (var t = this.previousSibling; t && t.nodeType !== 1;)t = t.previousSibling; return t; } }); }.call(typeof window === 'object' && window || typeof self === 'object' && self || typeof n.g === 'object' && n.g || {}), g.prototype.init = function () { typeof window.matchMedia === 'function' ? this.setupResponsiveChecks() : this.setup(); }, g.prototype.setupResponsiveChecks = function () { this.mql = window.matchMedia('(min-width: 40.0625em)'), this.mql.addListener(this.checkMode.bind(this)), this.checkMode(); }, g.prototype.checkMode = function () { this.mql.matches ? this.setup() : this.teardown(); }, g.prototype.setup = function () { const t = this.$module; const n = this.$tabs; const o = t.querySelector('.govuk-tabs__list'); const i = t.querySelectorAll('.govuk-tabs__list-item'); if (n && o && i) { o.setAttribute('role', 'tablist'), e(i, ((t) => { t.setAttribute('role', 'presentation'); })), e(n, (t) => { this.setAttributes(t), t.boundTabClick = this.onTabClick.bind(this), t.boundTabKeydown = this.onTabKeydown.bind(this), t.addEventListener('click', t.boundTabClick, !0), t.addEventListener('keydown', t.boundTabKeydown, !0), this.hideTab(t); }); const s = this.getTab(window.location.hash) || this.$tabs[0]; this.showTab(s), t.boundOnHashChange = this.onHashChange.bind(this), window.addEventListener('hashchange', t.boundOnHashChange, !0); } }, g.prototype.teardown = function () { const t = this.$module; const n = this.$tabs; const o = t.querySelector('.govuk-tabs__list'); const i = t.querySelectorAll('.govuk-tabs__list-item'); n && o && i && (o.removeAttribute('role'), e(i, ((t) => { t.removeAttribute('role', 'presentation'); })), e(n, (t) => { t.removeEventListener('click', t.boundTabClick, !0), t.removeEventListener('keydown', t.boundTabKeydown, !0), this.unsetAttributes(t); }), window.removeEventListener('hashchange', t.boundOnHashChange, !0)); }, g.prototype.onHashChange = function (t) { const e = window.location.hash; const n = this.getTab(e); if (n) if (this.changingHash) this.changingHash = !1; else { const o = this.getCurrentTab(); this.hideTab(o), this.showTab(n), n.focus(); } }, g.prototype.hideTab = function (t) { this.unhighlightTab(t), this.hidePanel(t); }, g.prototype.showTab = function (t) { this.highlightTab(t), this.showPanel(t); }, g.prototype.getTab = function (t) { return this.$module.querySelector(`.govuk-tabs__tab[href="${t}"]`); }, g.prototype.setAttributes = function (t) { const e = this.getHref(t).slice(1); t.setAttribute('id', `tab_${e}`), t.setAttribute('role', 'tab'), t.setAttribute('aria-controls', e), t.setAttribute('aria-selected', 'false'), t.setAttribute('tabindex', '-1'); const n = this.getPanel(t); n.setAttribute('role', 'tabpanel'), n.setAttribute('aria-labelledby', t.id), n.classList.add(this.jsHiddenClass); }, g.prototype.unsetAttributes = function (t) { t.removeAttribute('id'), t.removeAttribute('role'), t.removeAttribute('aria-controls'), t.removeAttribute('aria-selected'), t.removeAttribute('tabindex'); const e = this.getPanel(t); e.removeAttribute('role'), e.removeAttribute('aria-labelledby'), e.classList.remove(this.jsHiddenClass); }, g.prototype.onTabClick = function (t) { if (!t.target.classList.contains('govuk-tabs__tab')) return !1; t.preventDefault(); const e = t.target; const n = this.getCurrentTab(); this.hideTab(n), this.showTab(e), this.createHistoryEntry(e); }, g.prototype.createHistoryEntry = function (t) { const e = this.getPanel(t); const n = e.id; e.id = '', this.changingHash = !0, window.location.hash = this.getHref(t).slice(1), e.id = n; }, g.prototype.onTabKeydown = function (t) { switch (t.keyCode) { case this.keys.left: case this.keys.up: this.activatePreviousTab(), t.preventDefault(); break; case this.keys.right: case this.keys.down: this.activateNextTab(), t.preventDefault(); } }, g.prototype.activateNextTab = function () { const t = this.getCurrentTab(); const e = t.parentNode.nextElementSibling; if (e) var n = e.querySelector('.govuk-tabs__tab'); n && (this.hideTab(t), this.showTab(n), n.focus(), this.createHistoryEntry(n)); }, g.prototype.activatePreviousTab = function () { const t = this.getCurrentTab(); const e = t.parentNode.previousElementSibling; if (e) var n = e.querySelector('.govuk-tabs__tab'); n && (this.hideTab(t), this.showTab(n), n.focus(), this.createHistoryEntry(n)); }, g.prototype.getPanel = function (t) { return this.$module.querySelector(this.getHref(t)); }, g.prototype.showPanel = function (t) { this.getPanel(t).classList.remove(this.jsHiddenClass); }, g.prototype.hidePanel = function (t) { this.getPanel(t).classList.add(this.jsHiddenClass); }, g.prototype.unhighlightTab = function (t) { t.setAttribute('aria-selected', 'false'), t.parentNode.classList.remove('govuk-tabs__list-item--selected'), t.setAttribute('tabindex', '-1'); }, g.prototype.highlightTab = function (t) { t.setAttribute('aria-selected', 'true'), t.parentNode.classList.add('govuk-tabs__list-item--selected'), t.setAttribute('tabindex', '0'); }, g.prototype.getCurrentTab = function () { return this.$module.querySelector('.govuk-tabs__list-item--selected .govuk-tabs__tab'); }, g.prototype.getHref = function (t) { const e = t.getAttribute('href'); return e.slice(e.indexOf('#'), e.length); }, t.initAll = w, t.Accordion = i, t.Button = c, t.Details = d, t.CharacterCount = h, t.Checkboxes = p, t.ErrorSummary = f, t.Header = v, t.NotificationBanner = m, t.Radios = b, t.SkipLink = y, t.Tabs = g;
    }(e));
  } }; const e = {}; function n(o) { const i = e[o]; if (void 0 !== i) return i.exports; const s = e[o] = { exports: {} }; return t[o].call(s.exports, s, s.exports, n), s.exports; }n.n = function (t) { const e = t && t.__esModule ? function () { return t.default; } : function () { return t; }; return n.d(e, { a: e }), e; }, n.d = function (t, e) { for (const o in e)n.o(e, o) && !n.o(t, o) && Object.defineProperty(t, o, { enumerable: !0, get: e[o] }); }, n.g = (function () { if (typeof globalThis === 'object') return globalThis; try { return this || new Function('return this')(); } catch (t) { if (typeof window === 'object') return window; } }()), n.o = function (t, e) { return Object.prototype.hasOwnProperty.call(t, e); }, n.r = function (t) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(t, '__esModule', { value: !0 }); }; const o = {}; !(function () {
    n.r(o); const t = n(4); o.default = (0, t.initAll)();
  }()), (DTFS = void 0 === DTFS ? {} : DTFS).govukFrontend = o;
}());
