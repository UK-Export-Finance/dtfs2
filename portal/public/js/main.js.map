{"version":3,"sources":["webpack://DTFS.[name]/./scripts/show-hide-element.js","webpack://DTFS.[name]/./scripts/change-industry-classes.js","webpack://DTFS.[name]/./styles/styles.scss","webpack://DTFS.[name]/./scripts/main.js","webpack://DTFS.[name]/./scripts/number.js","webpack://DTFS.[name]/webpack/bootstrap","webpack://DTFS.[name]/webpack/startup","webpack://DTFS.[name]/webpack/runtime/define property getters","webpack://DTFS.[name]/webpack/runtime/global","webpack://DTFS.[name]/webpack/runtime/hasOwnProperty shorthand","webpack://DTFS.[name]/webpack/runtime/make namespace object","webpack://DTFS.[name]/webpack/runtime/publicPath"],"names":["getElement","id","document","getElementById","appendSelectOption","selectElement","option","optionElement","createElement","value","innerHTML","name","code","selectedValue","selected","appendChild","showHideElement","elementId","showBoolean","element","removeAttribute","setAttribute","changeScreenVisibilityOfElement","className","isNumeric","Number","isFinite","decimalsCount","numb","decimals","toString","split","length","roundNumber","digits","modifiedValue","d","Math","round","changeIndustryClasses","event","sectors","sectorCode","target","industryClasses","find","sector","classes","getIndustryClassesFromSectorCode","forEach","i","selectedIndex","__webpack_module_cache__","__webpack_require__","moduleId","exports","module","__webpack_modules__","definition","key","o","Object","defineProperty","enumerable","get","g","globalThis","this","Function","e","window","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","src","scripts","getElementsByTagName","Error","replace","p"],"mappings":"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","file":"main.js","sourcesContent":["export const getElement = (id) => document.getElementById(id);\n\nexport const changeScreenVisibilityOfElement = (elementId, showBoolean) => {\n  const element = getElement(elementId);\n\n  if (showBoolean) {\n    element.className = '';\n  } else {\n    element.className = 'display-none';\n  }\n};\n\nexport const showHideElement = (elementId, showBoolean) => {\n  const element = getElement(elementId);\n\n  if (showBoolean) {\n    element.removeAttribute('hidden');\n  } else {\n    element.setAttribute('hidden', true);\n  }\n};\n","export const industryClassElement = () => document.getElementById('industry-class');\n\nexport const appendSelectOption = (selectElement, option) => {\n  const optionElement = document.createElement('option');\n  optionElement.value = option.value;\n  optionElement.innerHTML = option.name;\n  if (option.code === option.selectedValue) {\n    optionElement.selected = true;\n  }\n  selectElement.appendChild(optionElement);\n};\n\nexport const getIndustryClassesFromSectorCode = (sectors, sectorCode) => {\n  const foundSector = sectors.find((sector) => sector.code === sectorCode);\n  return foundSector.classes;\n};\n\nexport const changeIndustryClasses = (event, sectors, selectedValue) => {\n  if (event) {\n    const sectorCode = event.target.value;\n    const selectElement = industryClassElement();\n    const industryClasses = getIndustryClassesFromSectorCode(sectors, sectorCode);\n\n    selectElement.innerHTML = '';\n\n    appendSelectOption(\n      selectElement,\n      { value: '', name: 'Select value' },\n    );\n\n    industryClasses.forEach((i) => {\n      appendSelectOption(\n        selectElement,\n        {\n          value: i.code,\n          name: i.name,\n          selectedValue,\n        },\n      );\n    });\n\n    selectElement.selectedIndex = '0';\n  }\n};\n","export default __webpack_public_path__ + \"../css/styles.css\";","import {\n  changeScreenVisibilityOfElement as changeScreenVisibilityOfElementFunc,\n  showHideElement as showHideElementFunc,\n} from './show-hide-element';\nimport {\n  changeIndustryClasses as changeIndustryClassesFunc,\n} from './change-industry-classes';\nimport {\n  isNumeric as isNumericFunc,\n  decimalsCount as decimalsCountFunc,\n  roundNumber as roundNumberFunc,\n} from './number';\nimport '../styles/styles.scss';\n\nexport const showHideElement = showHideElementFunc;\nexport const changeScreenVisibilityOfElement = changeScreenVisibilityOfElementFunc;\n\nexport const isNumeric = isNumericFunc;\nexport const decimalsCount = decimalsCountFunc;\nexport const roundNumber = roundNumberFunc;\n\nexport const changeIndustryClasses = changeIndustryClassesFunc;\n","export const isNumeric = (value) => {\n  if ((typeof value === 'number') && value === Number(value) && Number.isFinite(value)) {\n    return true;\n  }\n  return false;\n};\n\nexport const decimalsCount = (numb) => {\n  const decimals = numb.toString().split('.')[1];\n  if (decimals) {\n    return decimals.length;\n  }\n  return 0;\n};\n\nexport const roundNumber = (value, digits) => {\n  let modifiedValue = value;\n  let d = digits;\n\n  if (!digits) {\n    d = 2;\n  }\n\n  modifiedValue *= 10 ** d;\n  modifiedValue = Math.round(modifiedValue);\n  modifiedValue /= 10 ** d;\n  return modifiedValue;\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(149);\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;"],"sourceRoot":""}