const dashboard = require('../../e2e/pages/dashboard');
const selectScheme = require('../../e2e/pages/selectScheme');
const beforeYouStart = require('../../e2e/pages/beforeYouStart');
const bankDetails = require('../../e2e/pages/bankDetails');
const contract = require('../../e2e/pages/contract');
const aboutSupplier = require('../../e2e/pages/contract/about/about-supplier');
const aboutBuyer = require('../../e2e/pages/contract/about/about-buyer');
const aboutFinancial = require('../../e2e/pages/contract/about/about-financial');
const eligibilityCriteria = require('../../e2e/pages/eligibilityCriteria');
const eligibilityPreview = require('../../e2e/pages/eligibilityPreview');
const bondDetails = require('../../e2e/pages/bondDetails');
const bondFinancialDetails = require('../../e2e/pages/bondFinancialDetails');
const bondFeeDetails = require('../../e2e/pages/bondFeeDetails');
const contractReadyForReview = require('../../e2e/pages/contract/contract-readyForReview');
const login = require('./login');
const MOCK_USERS = require('../../../../e2e-fixtures/index');

const { BANK1_MAKER1 } = MOCK_USERS;

const createBssApplicationReadyForCheck = () => {
  login(BANK1_MAKER1);
  dashboard.createNewSubmission().click();
  selectScheme.bss().click();
  selectScheme.continue().click();
  beforeYouStart.true().click();
  beforeYouStart.submit().click();
  bankDetails.bankDealId().type('12345678');
  bankDetails.bankDealName().type('BSS Deal');
  bankDetails.submit().click();
  contract.aboutSupplierDetailsLink().click();
  aboutSupplier.supplierType().select('Exporter');
  aboutSupplier.supplierCompaniesHouseRegistrationNumber().type('12345678');
  aboutSupplier.supplierSearchCompaniesHouse().click();
  aboutSupplier.supplierAddress().country().select('United Kingdom');
  aboutSupplier.supplierCorrespondenceAddressSame().click();
  aboutSupplier.smeTypeSmall().click();
  aboutSupplier.supplyContractDescription().type('Supply Contract Description');
  aboutSupplier.notLegallyDistinct().click();
  aboutSupplier.nextPage().click();
  aboutBuyer.buyerName().type('Buyer Name');
  aboutBuyer.buyerAddress().country().select('United Kingdom');
  aboutBuyer.buyerAddress().line1().type('Line 1');
  aboutBuyer.buyerAddress().line2().type('Line 2');
  aboutBuyer.buyerAddress().line3().type('Line 3');
  aboutBuyer.buyerAddress().town().type('Town');
  aboutBuyer.buyerAddress().postcode().type('AB1 2CD');
  aboutBuyer.destinationOfGoodsAndServices().select('United Kingdom');
  aboutBuyer.nextPage().click();
  aboutFinancial.supplyContractValue().type('100000');
  aboutFinancial.supplyContractCurrency().select('GBP - UK Sterling');
  aboutFinancial.saveAndGoBack().click();
  contract.eligibilityCriteriaLink().click();
  eligibilityCriteria.eligibilityCriteriaTrue(11).click();
  eligibilityCriteria.eligibilityCriteriaTrue(12).click();
  eligibilityCriteria.eligibilityCriteriaTrue(13).click();
  eligibilityCriteria.eligibilityCriteriaTrue(14).click();
  eligibilityCriteria.eligibilityCriteriaTrue(15).click();
  eligibilityCriteria.eligibilityCriteriaTrue(16).click();
  eligibilityCriteria.eligibilityCriteriaTrue(17).click();
  eligibilityCriteria.eligibilityCriteriaTrue(18).click();
  eligibilityCriteria.nextPageButton().click();
  eligibilityPreview.saveGoBackButton().click();
  contract.addBondButton().click();
  bondDetails.bondTypeInput().select('Advance payment guarantee');
  bondDetails.facilityStageUnissuedInput().click();
  bondDetails.ukefGuaranteeInMonthsInput().type('12');
  bondDetails.submit().click();
  bondFinancialDetails.facilityValueInput().type('100000');
  bondFinancialDetails.currencySameAsSupplyContractCurrencyYesInput().click();
  bondFinancialDetails.riskMarginFeeInput().type('10');
  bondFinancialDetails.coveredPercentageInput().type('80');
  bondFinancialDetails.submit().click();
  bondFeeDetails.feeTypeAtMaturityInput().click();
  bondFeeDetails.dayCountBasis365Input().click();
  bondFeeDetails.saveGoBackButton().click();
  contract.proceedToReview().click();
  contractReadyForReview.comments().type('Ready for checkers approval');
  contractReadyForReview.readyForCheckersApproval().click();
};

module.exports = createBssApplicationReadyForCheck;
