{"version":3,"file":"disableFormSubmitOnSubmission.js","mappings":"aA8EyCA,MACvC,IAAIC,GAAe,EAEnB,MAAMC,EA3EqBC,MAC3B,MAAMC,EAAQC,SAASC,iBAAiB,QAExC,IAAKF,EAAMG,OACT,OAAO,KAGT,MAAML,EAAWE,EAAMA,EAAMG,OAAS,GAEtC,OAAKL,GACI,IAGM,EA8DEC,GAEbD,GACFA,EAASM,iBAAiB,UAAWC,IA9BTC,EAACD,EAAOR,KAClCA,GACFQ,EAAME,gBACR,EA4BID,CAAwBD,EAAOR,GAC/BA,GAAe,EAzDsBW,KACzC,MAEMC,EAAuBR,SAASS,eAAeF,GAE/CG,EAAQV,SAASW,cAAc,SAErCD,EAAME,aAAa,OAAQ,UANF,CAAC,OAAQ,SAQjBC,SAASC,IACxB,MAAMC,EAAcP,EAAqBQ,aAAaF,GAClDC,GACFL,EAAME,aAAaE,EAAWC,EAChC,IAGFP,EAAqBS,OAAOP,EAAM,EA2C9BQ,CAAkCd,EAAMe,UAAUC,IAtBtCpB,SAASC,iBAAiB,iBAClCY,SAASQ,IACfA,EAAOT,aAAa,WAAY,IAChCS,EAAOT,aAAa,gBAAiB,OAAO,GAqBlB,GAE5B,EAGFjB,I","sources":["webpack://DTFS_GEF/../libs/common/src/ui-scripts/disable-form-submit-on-submission.js"],"sourcesContent":["/**\n * Gets the last form on the page if any forms are present.\n * The last form is taken as it is foreseeable to have multiple forms on a page,\n * and the submit button should always be in the last form on a page.\n * @returns {HTMLFormElement | null}\n */\nconst getLastFormIfPresent = () => {\n  const forms = document.querySelectorAll('form');\n\n  if (!forms.length) {\n    return null;\n  }\n\n  const lastForm = forms[forms.length - 1];\n\n  if (!lastForm) {\n    return null;\n  }\n\n  return lastForm;\n};\n\n/**\n * Creates a hidden input of the button used to submit the form.\n * This hidden input has any name or value attributes that the button has\n * as when we disable the initial button, the disabled button will not submit\n * this information to the server.\n * @param {string} selectedButtonId\n */\nconst createHiddenInputOfSelectedButton = (selectedButtonId) => {\n  const attributesToCopy = ['name', 'value'];\n\n  const buttonThatWasClicked = document.getElementById(selectedButtonId);\n\n  const input = document.createElement('input');\n\n  input.setAttribute('type', 'hidden');\n\n  attributesToCopy.forEach((attribute) => {\n    const valueToCopy = buttonThatWasClicked.getAttribute(attribute);\n    if (valueToCopy) {\n      input.setAttribute(attribute, valueToCopy);\n    }\n  });\n\n  buttonThatWasClicked.append(input);\n};\n\n/**\n * Prevents form resubmission by other methods other than clicking on buttons\n * (such as pressing enter on a form field or pressing enter on a button)\n * @param {SubmitEvent} event\n * @param {boolean} hasSubmitted\n */\nconst preventFormResubmission = (event, hasSubmitted) => {\n  if (hasSubmitted) {\n    event.preventDefault();\n  }\n};\n\n/**\n * Disables all govuk buttons on the page.\n * This is to prevent multiple form submissions by clicking on a submit button\n * more than once\n */\nconst disableAllGovUkButtons = () => {\n  const buttons = document.querySelectorAll('.govuk-button');\n  buttons.forEach((button) => {\n    button.setAttribute('disabled', '');\n    button.setAttribute('aria-disabled', 'true');\n  });\n};\n\n/**\n * Prevent multiple form submissions by pressing enter or clicking the submit button\n * The govukButton component has a preventDoubleClick property, but this only debounces in a one-second window,\n * and is therefore not sufficient for our needs as multiple forms take longer than a second to submit.\n */\nconst addDisableFormSubmitOnSubmission = () => {\n  let hasSubmitted = false;\n\n  const lastForm = getLastFormIfPresent();\n\n  if (lastForm) {\n    lastForm.addEventListener('submit', (event) => {\n      preventFormResubmission(event, hasSubmitted);\n      hasSubmitted = true;\n\n      createHiddenInputOfSelectedButton(event.submitter.id);\n\n      disableAllGovUkButtons();\n    });\n  }\n};\n\naddDisableFormSubmitOnSubmission();\n"],"names":["addDisableFormSubmitOnSubmission","hasSubmitted","lastForm","getLastFormIfPresent","forms","document","querySelectorAll","length","addEventListener","event","preventFormResubmission","preventDefault","selectedButtonId","buttonThatWasClicked","getElementById","input","createElement","setAttribute","forEach","attribute","valueToCopy","getAttribute","append","createHiddenInputOfSelectedButton","submitter","id","button"],"sourceRoot":""}