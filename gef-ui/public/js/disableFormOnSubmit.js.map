{"version":3,"file":"disableFormOnSubmit.js","mappings":"yBAIA,MAAMA,EAAQC,SAASC,iBAAiB,QAGlCC,EAAWH,EAAMA,EAAMI,OAAS,GAEtC,IAAIC,GAAe,EACnBF,GACEA,EAASG,iBAAiB,UAAWC,IAC/BF,GAEFE,EAAEC,iBAEJH,GAAe,EAECJ,SAASC,iBAAiB,iBAClCO,SAASC,IACfA,EAAOC,aAAa,WAAY,IAChCD,EAAOC,aAAa,gBAAiB,OAAO,GAC5C,K","sources":["webpack://DTFS_GEF/../libs/common/src/ui-scripts/disableFormOnSubmit.js"],"sourcesContent":["// Prevent multiple form submissions by pressing enter or clicking the submit button\r\n// The govukButton component has a preventDoubleClick property, but this only debounces in a one-second window,\r\n// and is therefore not sufficient for our needs\r\n\r\nconst forms = document.querySelectorAll('form');\r\n// only take the last form on the page, as document upload pages can have multiple forms on them, and this could\r\n// otherwise interfere with their behavior. The 'continue' button is always in the last form on a page.\r\nconst lastForm = forms[forms.length - 1];\r\n\r\nlet hasSubmitted = false;\r\nlastForm &&\r\n  lastForm.addEventListener('submit', (e) => {\r\n    if (hasSubmitted) {\r\n      // prevent multiple form submissions by keyboard\r\n      e.preventDefault();\r\n    }\r\n    hasSubmitted = true;\r\n\r\n    const buttons = document.querySelectorAll('.govuk-button');\r\n    buttons.forEach((button) => {\r\n      button.setAttribute('disabled', '');\r\n      button.setAttribute('aria-disabled', 'true');\r\n    });\r\n  });\r\n"],"names":["forms","document","querySelectorAll","lastForm","length","hasSubmitted","addEventListener","e","preventDefault","forEach","button","setAttribute"],"sourceRoot":""}