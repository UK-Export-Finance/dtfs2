{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationGateways_tfs_dev_tfm_gw_name": {
            "defaultValue": "tfs-dev-tfm-gw",
            "type": "String"
        },
        "virtualNetworks_tfs_dev_vnet_externalid": {
            "defaultValue": "/subscriptions/8beaa40a-2fb6-49d1-b080-ff1871b6276f/resourceGroups/Digital-Dev/providers/Microsoft.Network/virtualNetworks/tfs-dev-vnet",
            "type": "String"
        },
        "publicIPAddresses_tfs_dev_tfm_ip_externalid": {
            "defaultValue": "/subscriptions/8beaa40a-2fb6-49d1-b080-ff1871b6276f/resourceGroups/Digital-Dev/providers/Microsoft.Network/publicIPAddresses/tfs-dev-tfm-ip",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/applicationGateways",
            "apiVersion": "2022-11-01",
            "name": "[parameters('applicationGateways_tfs_dev_tfm_gw_name')]",
            "location": "uksouth",
            "tags": {
                "Environment": "Preproduction"
            },
            "properties": {
                "sku": {
                    "name": "WAF_v2",
                    "tier": "WAF_v2"
                },
                "gatewayIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/gatewayIPConfigurations/appGatewayFrontendIP')]",
                        "properties": {
                            "subnet": {
                                "id": "[concat(parameters('virtualNetworks_tfs_dev_vnet_externalid'), '/subnets/dev-gateway')]"
                            }
                        }
                    }
                ],
                "sslCertificates": [],
                "trustedRootCertificates": [],
                "trustedClientCertificates": [],
                "sslProfiles": [],
                "frontendIPConfigurations": [
                    {
                        "name": "appGatewayFrontendIP",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/frontendIPConfigurations/appGatewayFrontendIP')]",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[parameters('publicIPAddresses_tfs_dev_tfm_ip_externalid')]"
                            }
                        }
                    }
                ],
                "frontendPorts": [
                    {
                        "name": "appGatewayFrontendPort",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/frontendPorts/appGatewayFrontendPort')]",
                        "properties": {
                            "port": 80
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "appGatewayBackendPool",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/backendAddressPools/appGatewayBackendPool')]",
                        "properties": {
                            "backendAddresses": [
                                {
                                    "fqdn": "tfs-dev-trade-finance-manager-ui.azurewebsites.net"
                                }
                            ]
                        }
                    }
                ],
                "loadDistributionPolicies": [],
                "backendHttpSettingsCollection": [
                    {
                        "name": "appGatewayBackendHttpSettings",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]",
                        "properties": {
                            "port": 443,
                            "protocol": "Https",
                            "cookieBasedAffinity": "Disabled",
                            "pickHostNameFromBackendAddress": true,
                            "requestTimeout": 30,
                            "probe": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/probes/healthcheck')]"
                            }
                        }
                    }
                ],
                "backendSettingsCollection": [],
                "httpListeners": [
                    {
                        "name": "appGatewayHttpListener",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/httpListeners/appGatewayHttpListener')]",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
                            },
                            "frontendPort": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/frontendPorts/appGatewayFrontendPort')]"
                            },
                            "protocol": "Http",
                            "hostNames": [],
                            "requireServerNameIndication": false
                        }
                    }
                ],
                "listeners": [],
                "urlPathMaps": [],
                "requestRoutingRules": [
                    {
                        "name": "rule1",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/requestRoutingRules/rule1')]",
                        "properties": {
                            "ruleType": "Basic",
                            "priority": 10010,
                            "httpListener": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/httpListeners/appGatewayHttpListener')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/backendAddressPools/appGatewayBackendPool')]"
                            },
                            "backendHttpSettings": {
                                "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/backendHttpSettingsCollection/appGatewayBackendHttpSettings')]"
                            }
                        }
                    }
                ],
                "routingRules": [],
                "probes": [
                    {
                        "name": "healthcheck",
                        "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('applicationGateways_tfs_dev_tfm_gw_name')), '/probes/healthcheck')]",
                        "properties": {
                            "protocol": "Https",
                            "path": "/healthcheck?ag-tfm",
                            "interval": 30,
                            "timeout": 120,
                            "unhealthyThreshold": 8,
                            "pickHostNameFromBackendHttpSettings": true,
                            "minServers": 0,
                            "match": {}
                        }
                    }
                ],
                "rewriteRuleSets": [],
                "redirectConfigurations": [],
                "privateLinkConfigurations": [],
                "webApplicationFirewallConfiguration": {
                    "enabled": true,
                    "firewallMode": "Prevention",
                    "ruleSetType": "OWASP",
                    "ruleSetVersion": "3.2",
                    "disabledRuleGroups": [],
                    "exclusions": [],
                    "requestBodyCheck": false,
                    "maxRequestBodySizeInKb": 128,
                    "fileUploadLimitInMb": 100
                },
                "autoscaleConfiguration": {
                    "minCapacity": 1,
                    "maxCapacity": 5
                }
            }
        }
    ]
}