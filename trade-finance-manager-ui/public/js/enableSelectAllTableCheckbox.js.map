{"version":3,"file":"enableSelectAllTableCheckbox.js","mappings":"6BAAMA,EAAqC,6CACJC,SAASC,iBAAiB,yBAADC,OAA0BH,IAE3DI,QAAQ,SAACC,GACtC,IAAMC,EAA6BD,EAAOE,cAAcP,GAGlDQ,EAA8BH,EAAOH,iBADC,oDAiBtCO,EAAwC,WAAH,OAASC,MAAMC,UAAUC,MAAMC,KAAKL,EAA6B,SAACM,GAAQ,OAAKA,EAASC,OAAO,EAAC,EAIrIC,EAAgD,WAChDP,IACFH,EAA2BS,SAAU,EAJWL,MAAMC,UAAUM,KAAKJ,KAAKL,EAA6B,SAACM,GAAQ,OAAMA,EAASC,OAAO,KAQtIT,EAA2BS,SAAU,EAEzC,EAGOT,IAILA,EAA2BY,iBAAiB,SAAU,SAACC,GACjDA,EAAMC,OAAOL,QAjCnBP,EAA4BJ,QAAQ,SAACU,GAEnCA,EAASC,SAAU,CACrB,GAIAP,EAA4BJ,QAAQ,SAACU,GAEnCA,EAASC,SAAU,CACrB,EA4BA,GAE2C,IAAvCP,EAA4Ba,QAAgBZ,MAC9CH,EAA2BS,SAAU,GAGvCP,EAA4BJ,QAAQ,SAACU,GACnCA,EAASI,iBAAiB,SAAU,WAClCF,GACF,EACF,GAIJ,I","sources":["webpack://DTFS_TFM/./scripts/enable-select-all-table-checkbox.js"],"sourcesContent":["const selectAllTableCellCheckboxSelector = 'input[type=\"checkbox\"]#select-all-checkbox';\nconst allTablesWithSelectAllCheckbox = document.querySelectorAll(`table.govuk-table:has(${selectAllTableCellCheckboxSelector}`);\n\nallTablesWithSelectAllCheckbox.forEach(($table) => {\n  const selectAllTableCellCheckbox = $table.querySelector(selectAllTableCellCheckboxSelector);\n\n  const allOtherTableCellCheckboxesSelector = 'input[type=\"checkbox\"]:not(#select-all-checkbox)';\n  const allOtherTableCellCheckboxes = $table.querySelectorAll(allOtherTableCellCheckboxesSelector);\n\n  const checkAllTableCheckboxes = () => {\n    allOtherTableCellCheckboxes.forEach((checkbox) => {\n      // eslint-disable-next-line no-param-reassign\n      checkbox.checked = true;\n    });\n  };\n\n  const uncheckAllTableCheckboxes = () => {\n    allOtherTableCellCheckboxes.forEach((checkbox) => {\n      // eslint-disable-next-line no-param-reassign\n      checkbox.checked = false;\n    });\n  };\n\n  const areAllOtherTableCellCheckboxesChecked = () => Array.prototype.every.call(allOtherTableCellCheckboxes, (checkbox) => checkbox.checked);\n\n  const isAnyOtherTableCellCheckboxNotChecked = () => Array.prototype.some.call(allOtherTableCellCheckboxes, (checkbox) => !checkbox.checked);\n\n  const updateSelectAllTableCellCheckboxOnTableChange = () => {\n    if (areAllOtherTableCellCheckboxesChecked()) {\n      selectAllTableCellCheckbox.checked = true;\n      return;\n    }\n    if (isAnyOtherTableCellCheckboxNotChecked()) {\n      selectAllTableCellCheckbox.checked = false;\n    }\n  };\n\n  const enableSelectAllTableCheckboxIfPresent = () => {\n    if (!selectAllTableCellCheckbox) {\n      return;\n    }\n\n    selectAllTableCellCheckbox.addEventListener('change', (event) => {\n      if (event.target.checked) {\n        checkAllTableCheckboxes();\n      } else {\n        uncheckAllTableCheckboxes();\n      }\n    });\n\n    if (allOtherTableCellCheckboxes.length !== 0 && areAllOtherTableCellCheckboxesChecked()) {\n      selectAllTableCellCheckbox.checked = true;\n    }\n\n    allOtherTableCellCheckboxes.forEach((checkbox) => {\n      checkbox.addEventListener('change', () => {\n        updateSelectAllTableCellCheckboxOnTableChange();\n      });\n    });\n  };\n\n  enableSelectAllTableCheckboxIfPresent();\n});\n"],"names":["selectAllTableCellCheckboxSelector","document","querySelectorAll","concat","forEach","$table","selectAllTableCellCheckbox","querySelector","allOtherTableCellCheckboxes","areAllOtherTableCellCheckboxesChecked","Array","prototype","every","call","checkbox","checked","updateSelectAllTableCellCheckboxOnTableChange","some","addEventListener","event","target","length"],"sourceRoot":""}