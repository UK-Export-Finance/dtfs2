{% from "govuk/components/radios/macro.njk" import govukRadios %}
{% from "govuk/components/error-summary/macro.njk" import govukErrorSummary %}
{% from "govuk/components/input/macro.njk" import govukInput %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/back-link/macro.njk" import govukBackLink %}
{% from "govuk/components/inset-text/macro.njk" import govukInsetText %}
{% import "./_macros/recorded-payments-for-selected-fee-records-table.njk" as recordedPaymentsTable %}
{% import "./_macros/fee-record-details-table.njk" as feeRecordDetailsTable %}
{% import "./_macros/payment-date-input.njk" as paymentDateInput %}
{% extends "index.njk" %}
{% set backLink = { "href": backLinkHref } %}
{% set pageHasErrors = errors.errorSummary | length %}

{% block pageTitle %}
  {{ 'Add a payment' | formatPageTitleWithError(pageHasErrors) }}
{% endblock %}

{% block content %}
  {% if pageHasErrors %}
    {{ govukErrorSummary({
        titleText: "There is a problem",
        errorList: errors.errorSummary,
        attributes: {
        'data-cy': 'error-summary'
        }
    }) }}
  {% endif %}
  <div class="govuk-grid-row govuk-!-padding-top-7">
    <div class="govuk-grid-column-one-half">
      <span class="govuk-caption-l" data-cy="add-payment-heading-caption">{{ bank.name }},
      {{ formattedReportPeriod }}</span>
      <h1 class="govuk-heading-l">Add a payment</h1>
    </div>
  </div>
  {{ feeRecordDetailsTable.render({
    captionText: "Selected reported fees details",
    feeRecords: reportedFeeDetails.feeRecords,
    totalReportedPayments: reportedFeeDetails.totalReportedPayments,
    enableSelectingFeeRecords: false,
    overrides: {
      reportedFeesHeader: 'Reported fee'
    }
  }) }}
  {% if recordedPaymentsDetails | length %}
    {{ recordedPaymentsTable.render({
      recordedPaymentsDetails: recordedPaymentsDetails,
      multipleFeeRecordsSelected: multipleFeeRecordsSelected
    }) }}
  {% endif %}
  {% if canAddToExistingPayment %}
    {% set addToAnExistingPaymentButtonText = "Add reported fee" + ("s" if reportedFeeDetails.feeRecords | length > 1 else "") + " to an existing payment" %}
    <form method="post">
      <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
      {% for id in selectedFeeRecordCheckboxIds %}<input type="hidden" name={{ id }} value="on"/>{% endfor %}
      <input
        class="govuk-button govuk-button--secondary"
        formaction="/utilisation-reports/{{ reportId }}/add-to-an-existing-payment"
        value="{{ addToAnExistingPaymentButtonText }}"
        data-module="govuk-button"
        type="submit"
        data-cy="add-fees-to-an-existing-payment-button"/>
    </form>
  {% endif %}

  {% if gbpTolerance > 0 %}
    {{ govukInsetText({
      text: "Tolerances of Â£" + gbpTolerance + " or equivalent are applied. You cannot add any additional payments to the record if it is taken to a match status as a result of tolerance.",
      attributes: {
        "data-cy": "inset-tolerance-text"
      }
    }) }}
  {% endif %}

  <h2 class="govuk-heading-m">
    {% if paymentNumber > 1 %}
      Payment {{ paymentNumber }} details
    {% else %}
      New payment details
    {% endif %}
  </h2>
  <form method="post">
    <input type="hidden" name="_csrf" value="{{ csrfToken }}"/>
    <input type="hidden" name="addPaymentFormSubmission" value="true"/>
    {% for id in selectedFeeRecordCheckboxIds %}<input type="hidden" name={{ id }} value="on"/>{% endfor %}
    {{ govukRadios({
        classes: "govuk-radios--small",
        name: "paymentCurrency",
        fieldset: {
          legend: {
            text: "Currency payment was in",
            classes: "govuk-fieldset__legend--s"
          }
        },
        errorMessage: errors.paymentCurrencyErrorMessage and {
          text: errors.paymentCurrencyErrorMessage
        },
        value: formValues.paymentCurrency,
        items: [
          {
            value: "GBP",
            text: "GBP"
          },
          {
            value: "EUR",
            text: "EUR"
          },
          {
            value: "USD",
            text: "USD"
          },
          {
            value: "JPY",
            text: "JPY"
          }
        ]
    }) }}
    {{ govukInput({
        label: {
          text: "Amount received",
          classes: "govuk-label--s"
        },
        classes: "govuk-input--width-20",
        hint: {
          text: "Enter the amount without the currency"
        },
        id: "paymentAmount",
        name: "paymentAmount",
        value: formValues.paymentAmount,
        errorMessage: errors.paymentAmountErrorMessage and {
          text: errors.paymentAmountErrorMessage
        }
    }) }}
    {{ paymentDateInput.render({
      paymentDate: formValues.paymentDate,
      paymentDateError: errors.paymentDateError
    }) }}
    {{ govukInput({
        label: {
          text: "Payment reference (optional)",
          classes: "govuk-label--s"
        },
        classes: "govuk-input--width-20 govuk-input--extra-letter-spacing",
        errorMessage: errors.paymentReferenceErrorMessage and {
          text: errors.paymentReferenceErrorMessage
        },
        id: "paymentReference",
        name: "paymentReference",
        value: formValues.paymentReference
    }) }}
    {{ govukRadios({
        classes: "govuk-radios--small",
        name: "addAnotherPayment",
        fieldset: {
          legend: {
            text: "Add another payment for these reported fees?",
            classes: "govuk-fieldset__legend--s"
          }
        },
        errorMessage: errors.addAnotherPaymentErrorMessage and {
          text: errors.addAnotherPaymentErrorMessage
        },
        value: formValues.addAnotherPayment,
        items: [
          {
            value: "true",
            text: "Yes"
          },
          {
            value: "false",
            text: "No"
          }
        ]
    }) }}
    <div class="govuk-button-group">
      {{ govukButton({
        text: "Continue",
        attributes: { 'data-cy': 'continue-button'}
      })}}
      <a class="govuk-link" href="{{ backLinkHref }}" id="cancel-link" data-cy="cancel-link">Cancel</a>
    </div>
  </form>
{% endblock %}
{% block sub_content %}{% endblock %}