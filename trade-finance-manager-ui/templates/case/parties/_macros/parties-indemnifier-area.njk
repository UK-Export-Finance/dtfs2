{% from "govuk/components/input/macro.njk" import govukInput %}

{% import './parties-key-value-grid-row.njk' as keyValueGridRow %}
{% import './parties-key-value-array-grid-row.njk' as keyValueArrayGridRow %}
{% import './parties-edit-unique-reference-link.njk' as uniqueReferenceNumberEditLink %}
{% import '../../../_macros/not-applicable.njk' as notApplicable %}

{% macro render(params) %}
  {% set deal = params.deal %}
  {% set userCanEdit = params.userCanEdit %}
  {% set renderEditLink = params.renderEditLink %}
  {% set renderEditForm = params.renderEditForm %}
  {% set indemnifier = params.tfm.parties.indemnifier %}

  {% if not indemnifier.partyUrn %}
    {% set uniqueRefStyle = "govuk-tag govuk-tag--red govuk-!-margin-top-2" %}
  {% endif %}

  <div class="govuk-grid-row separator-line {% if renderEditLink %}ukef-flex-container deal{% endif %}" data-cy="parties-indemnifier">
    <div class="govuk-grid-column-one-half">
      {% if userCanEdit and renderEditForm %}
        <h1 class="ukef-heading-l govuk-!-margin-top-9" data-cy="edit-heading">Edit indemnifier details</h1>
      {% else %}
        <h2 class="ukef-heading-l" data-cy="edit-heading">Indemnifier</h2>
      {% endif %}
    </div>

    {% if renderEditLink and deal.dealType === 'BSS/EWCS' %}
      <div class="govuk-grid-column-one-half ukef-flex-container--align-center-right">
        {{ uniqueReferenceNumberEditLink.render({dealId: deal._id, type: 'indemnifier'}) }}
      </div>
    {% endif %}
  </div>

  <div class="govuk-grid-row deal">
    <div class="govuk-grid-column-one-half">

      {% if deal.dealType === 'GEF'%}
        {{ notApplicable.render({ id: 'indemnifier' })}}
      {% else %}

        <div data-cy="indemnifier-details">
          {{ keyValueGridRow.render({
            key: 'Name',
            value: deal.submissionDetails.indemnifierName,
            dataCy: 'indemnifier-name'
          }) }}

          {% if userCanEdit and renderEditForm %}
            <div class="govuk-grid-row">
              <div class="govuk-grid-column-one-half">
              {{ govukInput({
                label: {
                  text: "Unique reference number (URN)"
                },
                id: "partyUrn",
                name: "partyUrn",
                attributes: {
                  "data-cy": "urn-input"
                },
                value: indemnifier.partyUrn
              }) }}
              </div>
            </div>
          {% else %}
            {{ keyValueGridRow.render({
              key: 'Unique reference number',
              value: indemnifier.partyUrn or "NOT MATCHED",
              valueStyle: uniqueRefStyle,
              dataCy: 'indemnifier-unique-ref'
            }) }}
          {% endif %}

          {{ keyValueArrayGridRow.render({
            key: 'Address',
            values:  [ deal.submissionDetails.indemnifierAddressLine1,
                    deal.submissionDetails.indemnifierAddressLine2,
                    deal.submissionDetails.indemnifierAddressLine3,
                    deal.submissionDetails.indemnifierAddressTown,
                    deal.submissionDetails.indemnifierAddressPostcode],
            dataCy: 'indemnifier-address'

          }) }}

          {{ keyValueGridRow.render({
            key: 'Country',
            value: deal.submissionDetails.indemnifierAddressCountry,
            dataCy: 'indemnifier-address-country'
          }) }}

          {{ keyValueGridRow.render({
            key: 'Companies house<br>registration number',
            value: deal.submissionDetails.indemnifierCompaniesHouseRegistrationNumber,
            dataCy: 'indemnifier-companies-house-registration-number'
          }) }}
          {{ keyValueGridRow.render({
            key: 'Is the indemnifier legally<br>distinct from the exporter?',
            value: deal.submissionDetails.legallyDistinct,
            dataCy: 'indemnifier-legally-distinct'
          }) }}
          {{ keyValueGridRow.render({
            key: 'Approval level required',
            value: ''
          }) }}

          {{ keyValueArrayGridRow.render({
            key: 'Correspondence Address',
            values:  [ deal.submissionDetails.indemnifierCorrespondenceAddressLine1,
                    deal.submissionDetails.indemnifierCorrespondenceAddressLine2,
                    deal.submissionDetails.indemnifierCorrespondenceAddressLine3,
                    deal.submissionDetails.indemnifierCorrespondenceAddressTown,
                    deal.submissionDetails.indemnifierCorrespondenceAddressPostcode],
            dataCy: 'correspondence-address'
          }) }}
          {{ keyValueGridRow.render({
            key: 'Correspondence country',
            value: deal.submissionDetails.indemnifierCorrespondenceAddressCountry
          }) }}

        </div>
      {% endif %}

    </div>
  </div>
{% endmacro %}
