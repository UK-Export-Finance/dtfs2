# This GHA is responsible for DTFS deployment.
# Deployment is initiated using `az cli` bash script.
#
# Standard Azure naming convention has been followed:
# https://learn.microsoft.com/en-us/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming
#
#
# Execution
# *********
# GHA is only invoked when following conditions are satisfied:
# 1. Push to the `dev`, `staging` , `feature` and `production` branches only.
# 2. Any modifications to atleast one of the `paths` targets.
# 3. Post a successful deployment, Cypress E2E regression test suite execution on `non-production` environment

name: Deployment üöÄ
run-name: DTFS deployment for ${{ github.repository }}

on:
  push:
    branches:
      - dev
      - feature
      - staging
      - production
      # TODO: Remove pre-merge
      - feat/gDTFS2-6911-cypress-automation-testing-post-deployment

    paths:
      - ".github/workflows/deployment.yml"
      - "portal/**"
      - "gef-ui/**"
      - "trade-finance-manager-ui/**"
      - "portal-api/**"
      - "dtfs-central-api/**"
      - "trade-finance-manager-api/**"
      - "external-api/**"
      - "azure-functions/acbs-function/**"
      - "azure-functions/number-generator-function/**"

env:
  PRODUCT: dtfs
  ENVIRONMENT: ${{ github.ref_name }}
  TIMEZONE: "Europe/London"
  # Base artifact
  FROM: latest

jobs:
  setup:
    name: Setup üîß
    runs-on: [self-hosted, linux, deployment]
    outputs:
      product: ${{ env.PRODUCT }}
      environment: ${{ env.ENVIRONMENT }}
      timezone: ${{ env.TIMEZONE }}
    steps:
      - name: Environment üß™
        run: echo "Environment set to ${{ env.ENVIRONMENT }}"

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.TIMEZONE }}"

  webapp:
    name: WebApp üåê
    needs: setup
    environment: ${{ needs.setup.outputs.environment }}
    runs-on: [self-hosted, DTFS, deployment]

    env:
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}

    strategy:
      # Maximum number of parallel execution
      max-parallel: 2
      # Do not cancel in-progress jobs upon failure
      fail-fast: true
      # Single dimension matrix
      matrix:
        webapp:
          [
            "portal-ui",
            "gef-ui",
            "trade-finance-manager-ui",
            "portal-api",
            "dtfs-central-api",
            "external-api",
            "trade-finance-manager-api",
          ]

    concurrency:
      group: deployment-webapp-${{ github.workflow }}-${{ github.workflow_ref }}-${{ matrix.webapp }}
      cancel-in-progress: true

    steps:
      - name: Repository üóÉÔ∏è
        uses: actions/checkout@v4

      - name: Azure üîê
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Defaults ‚ú®
        uses: Azure/cli@v1.0.9
        with:
          inlineScript: |
            # Basic
            az configure --defaults location=${{ vars.REGION }}
            az configure --defaults group=${{ secrets.RESOURCE_GROUP }}

      - name: CLI üìù
        run: |
          echo ACR=$(az acr show -n $(az resource list --resource-type 'Microsoft.ContainerRegistry/registries' --query '[0].name' -o tsv) --query loginServer -o tsv) >> $GITHUB_ENV
          echo ACR_USER=$(az acr show -n $(az resource list --resource-type 'Microsoft.ContainerRegistry/registries' --query '[0].name' -o tsv) --query name -o tsv) >> $GITHUB_ENV
          echo WEBAPP=$(az resource list --resource-type 'Microsoft.Web/sites' --query '[?contains(name, `${{ matrix.webapp }}`)].name' -o tsv) >> $GITHUB_ENV

      - name: ACR üîê
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR }}
          username: ${{ env.ACR_USER }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Directory üìÅ
        if: ${{ 'portal-ui' == matrix.webapp }}
        run: echo "DIRECTORY=portal" >> $GITHUB_ENV

      - name: Directory üìÅ
        if: ${{ 'portal-ui' != matrix.webapp }}
        run: echo "DIRECTORY=${{ matrix.webapp }}" >> $GITHUB_ENV

      - name: Artifacts üóÉÔ∏è
        working-directory: ./${{ env.DIRECTORY }}
        run: |
          # Build images
          docker build . \
          -t ${{ env.ACR }}/${{ matrix.webapp }}:${{ github.sha }} \
          -t ${{ env.ACR }}/${{ matrix.webapp }}:${{ env.FROM }} \
          --build-arg NODE_ENV=${{ vars.NODE_ENV }}

          # Push images
          docker push ${{ env.ACR }}/${{ matrix.webapp }}:${{ github.sha }}
          docker push ${{ env.ACR }}/${{ matrix.webapp }}:${{ env.FROM }}

      - name: Slot üîÄ
        uses: azure/cli@v1.0.9
        with:
          inlineScript: |
            # Create new temporary slot
            az webapp deployment slot create \
            --slot ${{ github.sha }} \
            --name ${{ env.WEBAPP }} \
            --configuration-source ${{ env.WEBAPP }} \
            --deployment-container-image-name ${{ env.ACR }}/${{ matrix.webapp }}:${{ env.FROM }}

            # Swap slot
            az webapp deployment slot swap \
            --slot ${{ github.sha }} \
            --name ${{ env.WEBAPP }} \
            --action swap

            # Delete temporary slot
            az webapp deployment slot delete \
            --slot ${{ github.sha }} \
            --name ${{ env.WEBAPP }}

  functions:
    name: Functions ‚ö°
    needs: setup
    environment: ${{ needs.setup.outputs.environment }}
    runs-on: [self-hosted, DTFS, deployment]

    env:
      ENVIRONMENT: ${{ needs.setup.outputs.environment }}

    strategy:
      # Maximum number of parallel execution
      max-parallel: 2
      # Do not cancel in-progress jobs upon failure
      fail-fast: true
      # Single dimension matrix
      matrix:
        functions: ["acbs-function", "number-generator-function"]

    concurrency:
      group: deployment-functions-${{ github.workflow }}-${{ github.workflow_ref }}-${{ matrix.functions }}
      cancel-in-progress: true

    steps:
      - name: Repository üóÉÔ∏è
        uses: actions/checkout@v4

      - name: Azure üîê
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Defaults ‚ú®
        uses: Azure/cli@v1.0.9
        with:
          inlineScript: |
            # Basic
            az configure --defaults location=${{ vars.REGION }}
            az configure --defaults group=${{ secrets.RESOURCE_GROUP }}

      - name: Directory üìÅ
        if: ${{ 'acbs-function' == matrix.functions }}
        run: echo "NAME=acbs" >> $GITHUB_ENV

      - name: Directory üìÅ
        if: ${{ 'number-generator-function' == matrix.functions }}
        run: echo "NAME=number-generator" >> $GITHUB_ENV

      - name: CLI üìù
        run: |
          echo ACR=$(az acr show -n $(az resource list --resource-type 'Microsoft.ContainerRegistry/registries' --query '[0].name' -o tsv) --query loginServer -o tsv) >> $GITHUB_ENV
          echo ACR_USER=$(az acr show -n $(az resource list --resource-type 'Microsoft.ContainerRegistry/registries' --query '[0].name' -o tsv) --query name -o tsv) >> $GITHUB_ENV
          echo FUNCTION=$(az resource list --resource-type 'Microsoft.Web/sites' --query '[?contains(name, `${{ env.NAME }}`)].name' -o tsv) >> $GITHUB_ENV

      - name: ACR üîê
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR }}
          username: ${{ env.ACR_USER }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Artifacts üóÉÔ∏è
        working-directory: ./azure-functions/${{ matrix.functions }}
        run: |
          # Build images
          docker build . \
          -t ${{ env.ACR }}/${{ matrix.functions }}:${{ github.sha }} \
          -t ${{ env.ACR }}/${{ matrix.functions }}:${{ env.FROM }} \
          --build-arg NODE_ENV=${{ vars.NODE_ENV }}

          # Push images
          docker push ${{ env.ACR }}/${{ matrix.functions }}:${{ github.sha }}
          docker push ${{ env.ACR }}/${{ matrix.functions }}:${{ env.FROM }}

      - name: Slot üîÄ
        uses: azure/cli@v1.0.9
        with:
          inlineScript: |
            # Create new temporary slot
            az webapp deployment slot create \
            --slot ${{ github.sha }} \
            --name ${{ env.WEBAPP }} \
            --configuration-source ${{ env.WEBAPP }} \
            --deployment-container-image-name ${{ env.ACR }}/${{ matrix.webapp }}:${{ env.FROM }}

            # Swap slot
            az webapp deployment slot swap \
            --slot ${{ github.sha }} \
            --name ${{ env.WEBAPP }} \
            --action swap

            # Delete temporary slot
            az webapp deployment slot delete \
            --slot ${{ github.sha }} \
            --name ${{ env.WEBAPP }}
