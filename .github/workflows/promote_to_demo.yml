name: Deploy demo

on:
  push:
    branches: [ demo ]

env:
  environment: demo
  credentials: ${{ secrets.AZURE_DIGITAL_DEV }}

  # From
  registry_from: ${{ secrets.ACR_REGISTRY_DEV }}
  registry_from_username: ${{ secrets.ACR_USERNAME_DEV }}
  registry_from_password: ${{ secrets.ACR_PASSWORD_DEV }}
  tag_from: dev

  # To
  registry_to: ${{ secrets.ACR_REGISTRY_DEMO }}
  registry_to_username: ${{ secrets.ACR_USERNAME_DEMO }}
  registry_to_password: ${{ secrets.ACR_PASSWORD_DEMO }}
  tag_to: demo

jobs:
  set-environment:
    name: Set Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
    steps:
    - name: Initialise Environment
      run: |
        echo Setting environment to ${{ env.environment }}

  portal-ui:
    name: Promote Portal UI
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/portal-ui:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/portal-ui:${{ env.tag_from }} ${{ env.registry_to }}/portal-ui:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/portal-ui:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-portal-ui

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }}
        
  portal-api:
    name: Promote Portal API
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/portal-api:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/portal-api:${{ env.tag_from }} ${{ env.registry_to }}/portal-api:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/portal-api:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-portal-api

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }}

  reference-data-proxy:
    name: Promote Reference Data Proxy
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/reference-data-proxy:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/reference-data-proxy:${{ env.tag_from }} ${{ env.registry_to }}/reference-data-proxy:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/reference-data-proxy:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-reference-data-proxy --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-reference-data-proxy

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-reference-data-proxy --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-reference-data-proxy --slot ${{ github.sha }}

  trade-finance-manager-ui:
    name: Promote TFM UI
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/trade-finance-manager-ui:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/trade-finance-manager-ui:${{ env.tag_from }} ${{ env.registry_to }}/trade-finance-manager-ui:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/trade-finance-manager-ui:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-trade-finance-manager-ui --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-trade-finance-manager-ui

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-trade-finance-manager-ui --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-trade-finance-manager-ui --slot ${{ github.sha }}
        
  trade-finance-manager-api:
    name: Promote TFM API
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/trade-finance-manager-api:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/trade-finance-manager-api:${{ env.tag_from }} ${{ env.registry_to }}/trade-finance-manager-api:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/trade-finance-manager-api:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-trade-finance-manager-api --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-trade-finance-manager-api

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-trade-finance-manager-api --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-trade-finance-manager-api --slot ${{ github.sha }}

  dtfs-central-api:
    name: Promote DTFS Central API
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/dtfs-central-api:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/dtfs-central-api:${{ env.tag_from }} ${{ env.registry_to }}/dtfs-central-api:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/dtfs-central-api:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-dtfs-central-api --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-dtfs-central-api

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-dtfs-central-api --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-dtfs-central-api --slot ${{ github.sha }}

  gef-ui:
    name: Promote GEF UI
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/gef-ui:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/gef-ui:${{ env.tag_from }} ${{ env.registry_to }}/gef-ui:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/gef-ui:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-gef-ui --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-gef-ui

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-gef-ui --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-gef-ui --slot ${{ github.sha }}
  
  acbs-functions:
    name: Promote ACBS Functions
    runs-on: ubuntu-latest
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    steps:

    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ secrets.resource_group }}

    - name: Log in to source container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_from }}
        username: ${{ env.registry_from_username }}
        password: ${{ env.registry_from_password }}

    - name: Log in to destination container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.registry_to }}
        username: ${{ env.registry_to_username }}
        password: ${{ env.registry_to_password }}

    - name: Promote container image
      run: |
        docker pull ${{ env.registry_from }}/azure-function-acbs:${{ env.tag_from }}
        docker tag ${{ env.registry_from }}/azure-function-acbs:${{ env.tag_from }} ${{ env.registry_to }}/azure-function-acbs:${{ env.tag_to }}
        docker push ${{ env.registry_to }}/azure-function-acbs:${{ env.tag_to }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az functionapp deployment slot create --name tfs-${{ env.environment }}-azure-function-acbs --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-azure-function-acbs

    - name: Swap slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az functionapp deployment slot swap --name tfs-${{ env.environment }}-azure-function-acbs --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az functionapp deployment slot delete --name tfs-${{ env.environment }}-azure-function-acbs --slot ${{ github.sha }}
