name: Deploy demo

on:
  push:
    branches: [ demo ]

env:
  environment: demo
  credentials: ${{ secrets.AZURE_DIGITAL_DEV }}
  resource_group: ${{ secrets.DEMO_RESOURCE_GROUP }}

jobs:

  promote:
    name: Promote container images
    runs-on: ubuntu-latest
    steps:
    - name: Log in to Dev container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DEV_ACR_REGISTRY }}
        username: ${{ secrets.DEV_ACR_USERNAME }}
        password: ${{ secrets.DEV_ACR_PASSWORD }}
    - name: Log in to Demo container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DEMO_ACR_REGISTRY }}
        username: ${{ secrets.DEMO_ACR_USERNAME }}
        password: ${{ secrets.DEMO_ACR_PASSWORD }}
    - name: Tag images
      run: |
        from=dev
        to=demo

        docker pull ${{ secrets.DEV_ACR_REGISTRY }}/portal-ui:$from
        docker tag ${{ secrets.DEV_ACR_REGISTRY }}/portal-ui:$from ${{ secrets.DEMO_ACR_REGISTRY }}/portal-ui:$to
        docker push ${{ secrets.DEMO_ACR_REGISTRY }}/portal-ui:$to

        docker pull ${{ secrets.DEV_ACR_REGISTRY }}/portal-api:$from
        docker tag ${{ secrets.DEV_ACR_REGISTRY }}/portal-api:$from ${{ secrets.DEMO_ACR_REGISTRY }}/portal-api:$to
        docker push ${{ secrets.DEMO_ACR_REGISTRY }}/portal-api:$to

  deploy:
    name: Deploy container images
    needs: promote
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ env.resource_group }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-portal-ui
          az webapp deployment slot create --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-portal-api

    - name: Deploy slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }} --action swap
          az webapp deployment slot swap --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }} --action swap

    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }}
          az webapp deployment slot delete --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }}
          
  refresh-data:
    needs: deploy
    name: Refresh environment data
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Re-insert mocks
        run: |
          cd utils/mock-data-loader 
          echo "DEAL_API_URL=https://tfs-${{ env.environment }}-portal-api.azurewebsites.net" > .env
          cat .env
          npm install
          node re-insert-mocks.js
