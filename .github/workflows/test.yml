# 1. Infrastructure Setup:
# Sets environment variables: environment, timezone, and secrets for various services.
# Outputs: Exposes environment and timezone for use in subsequent jobs.
#
# 2. API Tests:
# Runs tests for API endpoints in parallel:
# portal-api, gef-ui, trade-finance-manager-ui, portal, dtfs-central-api, external-api
# DOF-specific API tests:
# acbs-function
# Generates code coverage reports for API tests.
#
# 3. Unit Tests:
# Runs unit tests for individual code components:
# portal-api, dtfs-central-api, external-api, trade-finance-manager-api
# Generates code coverage reports for unit tests.
#
# 4. UI Integration Tests:
# Tests interactions between UI elements and backend logic:
# portal, gef-ui, trade-finance-manager-ui
# Generates code coverage reports for UI integration tests.
#
# 5-7. End-to-End (E2E) Tests:
# Runs tests simulating user journeys through different parts of the application:
# portal (various scenarios)
# gef
# tfm
# ukef
# Uses Cypress for E2E testing.
# Initializes the environment with data before tests.
#
# 8. End-to-End (E2E) - Feature flags (FF)
# Run tests 5-7 with all feature flags set to true
#
# Additional Notes:
# Workflow runs on pull requests to the main branch and pushes to specific branches.
# Concurrency strategies ensure efficient resource usage and avoid job collisions.
# Environment variables and secrets are managed securely.
# Codecov integration tracks code coverage across different test types.
#
# 9. Docker build
# Verified docker build step for `acbs-functions` microservice.
# All other microservice builds are not tested due to docker compose
# execution prior to test suits initiation.
# Since ACBS pertinent tests do not require `acbs` docker service initialisation
# any build failure would be missed without this Quality Assurance - Tests job.

name: Quality Assurance - Tests
run-name: ‚úÖ Executing test QA on ${{ github.event.number }}

permissions:
  contents: read

on:
  pull_request:
    branches:
      - main
      - 'release-*'

    paths:
      - 'package*.json'
      - 'docker*.yml'
      - '.github/**'
      - 'gef-ui/**'
      - 'portal-ui/**'
      - 'portal-api/**'
      - 'trade-finance-manager-ui/**'
      - 'trade-finance-manager-api/**'
      - 'external-api/**'
      - 'dtfs-central-api/**'
      - 'azure-functions/**'
      - 'e2e-tests/**'
      - 'utils/**'
      - 'libs/**'
      - 'README.md'
      - 'reverse-proxy/**'

  push:
    branches:
      # Staging ready release
      - release-*
      - '!release-please*'

  create:
    branches:
      # Production ready release candidates
      - release-*-rc

    paths:
      - '.github/workflows/deployment.yml'
      - 'portal-ui/**'
      - 'gef-ui/**'
      - 'trade-finance-manager-ui/**'
      - 'portal-api/**'
      - 'dtfs-central-api/**'
      - 'trade-finance-manager-api/**'
      - 'external-api/**'
      - 'azure-functions/acbs-function/**'

env:
  environment: dev
  TZ: ${{ vars.TIMEZONE }}
  credentials: ${{ secrets.AZURE_DIGITAL_DEV }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  MONGO_INITDB_DATABASE: ${{ secrets.MONGO_INITDB_DATABASE }}
  MONGO_INITDB_ROOT_USERNAME: ${{ secrets.MONGO_INITDB_ROOT_USERNAME }}
  MONGO_INITDB_ROOT_PASSWORD: ${{ secrets.MONGO_INITDB_ROOT_PASSWORD }}
  AZURE_PORTAL_STORAGE_ACCOUNT: ${{ secrets.AZURE_PORTAL_STORAGE_ACCOUNT }}
  AZURE_PORTAL_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_PORTAL_STORAGE_ACCESS_KEY }}
  AZURE_PORTAL_FILESHARE_NAME: ${{ secrets.AZURE_PORTAL_FILESHARE_NAME }}
  AZURE_PORTAL_EXPORT_FOLDER: ${{ secrets.AZURE_PORTAL_EXPORT_FOLDER }}
  AZURE_UTILISATION_REPORTS_FILESHARE_NAME: ${{ vars.AZURE_UTILISATION_REPORTS_FILESHARE_NAME }}
  GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY}}
  MOCK_E2E_GOV_NOTIFY_API_KEY: ${{ vars.MOCK_E2E_GOV_NOTIFY_API_KEY }}
  MOCK_E2E_NUMBER_GENERATOR: ${{ vars.MOCK_E2E_NUMBER_GENERATOR }}
  GOV_NOTIFY_EMAIL_RECIPIENT: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT }}
  JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
  JWT_VALIDATING_KEY: ${{ secrets.JWT_VALIDATING_KEY }}
  APIM_TFS_URL: ${{ secrets.APIM_TFS_URL }}
  APIM_TFS_KEY: ${{ secrets.APIM_TFS_KEY }}
  APIM_TFS_VALUE: ${{ secrets.APIM_TFS_VALUE }}
  APIM_MDM_URL: ${{ secrets.APIM_MDM_URL }}
  APIM_MDM_KEY: ${{ secrets.APIM_MDM_KEY }}
  APIM_MDM_VALUE: ${{ secrets.APIM_MDM_VALUE }}
  APIM_ESTORE_URL: ${{ secrets.APIM_ESTORE_URL }}
  APIM_ESTORE_KEY: ${{ secrets.APIM_ESTORE_KEY }}
  APIM_ESTORE_VALUE: ${{ secrets.APIM_ESTORE_VALUE }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  UKEF_TFM_API_SYSTEM_KEY: ${{ secrets.UKEF_TFM_API_SYSTEM_KEY }}
  UKEF_TFM_API_REPORTS_KEY: ${{ secrets.UKEF_TFM_API_REPORTS_KEY }}
  ESTORE_URL: ${{ secrets.ESTORE_URL }}
  ESTORE_CRON_MANAGER_SCHEDULE: ${{ vars.ESTORE_CRON_MANAGER_SCHEDULE }}
  TFM_API_KEY: ${{ secrets.TFM_API_KEY }}
  PORTAL_API_KEY: ${{ secrets.PORTAL_API_KEY }}
  DTFS_CENTRAL_API_KEY: ${{ secrets.DTFS_CENTRAL_API_KEY }}
  EXTERNAL_API_KEY: ${{ secrets.EXTERNAL_API_KEY }}
  NODE_ENV: ${{ secrets.NODE_ENV }}
  CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
  PORTAL_API_URL: ${{ vars.PORTAL_API_URL_LOCALHOST }}
  TFM_API_URL: ${{ vars.TFM_API_URL_LOCALHOST }}
  EXTERNAL_API_URL: ${{ vars.EXTERNAL_API_URL_LOCALHOST }}
  DTFS_CENTRAL_API_URL: ${{ vars.DTFS_CENTRAL_API_URL_LOCALHOST }}
  PORTAL_UI_URL: ${{ vars.PORTAL_UI_URL_LOCALHOST }}
  TFM_UI_URL: ${{ vars.TFM_UI_URL_LOCALHOST }}
  RATE_LIMIT_THRESHOLD: ${{ vars.RATE_LIMIT_THRESHOLD }}
  UTILISATION_REPORT_DUE_DATE_BUSINESS_DAYS_FROM_START_OF_MONTH: ${{ vars.UTILISATION_REPORT_DUE_DATE_BUSINESS_DAYS_FROM_START_OF_MONTH }}
  UTILISATION_REPORT_OVERDUE_CHASER_DATE_BUSINESS_DAYS_FROM_START_OF_MONTH: ${{ vars.UTILISATION_REPORT_OVERDUE_CHASER_DATE_BUSINESS_DAYS_FROM_START_OF_MONTH }}
  UTILISATION_REPORT_SUBMISSION_PERIOD_START_EMAIL_SCHEDULE: ${{ vars.UTILISATION_REPORT_SUBMISSION_PERIOD_START_EMAIL_SCHEDULE }}
  UTILISATION_REPORT_DUE_EMAIL_SCHEDULE: ${{ vars.UTILISATION_REPORT_DUE_EMAIL_SCHEDULE }}
  UTILISATION_REPORT_OVERDUE_EMAIL_SCHEDULE: ${{ vars.UTILISATION_REPORT_OVERDUE_EMAIL_SCHEDULE }}
  CHANGE_STREAM_ENABLED: ${{ vars.CHANGE_STREAM_ENABLED }}
  DELETION_AUDIT_LOGS_TTL_SECONDS: ${{ vars.DELETION_AUDIT_LOGS_TTL_SECONDS }}
  AUDIT_API_URL: ${{ secrets.AUDIT_API_URL }}
  AUDIT_API_USERNAME: ${{ secrets.AUDIT_API_USERNAME }}
  AUDIT_API_PASSWORD: ${{ secrets.AUDIT_API_PASSWORD }}
  UTILISATION_REPORT_CREATION_FOR_BANKS_SCHEDULE: ${{ vars.UTILISATION_REPORT_CREATION_FOR_BANKS_SCHEDULE }}
  UTILISATION_REPORT_CREATION_FAILURE_EMAIL_ADDRESS: ${{ secrets. UTILISATION_REPORT_CREATION_FAILURE_EMAIL_ADDRESS }}
  ACCEPT_EULA: ${{ vars.ACCEPT_EULA }}
  MSSQL_SA_PASSWORD: ${{ secrets.MSSQL_SA_PASSWORD }}
  SQL_DB_HOST: ${{ secrets.SQL_DB_HOST_QA }}
  SQL_DB_PORT: ${{ secrets.SQL_DB_PORT_QA }}
  SQL_DB_USERNAME: ${{ secrets.SQL_DB_USERNAME_QA }}
  SQL_DB_PASSWORD: ${{ secrets.SQL_DB_PASSWORD_QA }}
  SQL_DB_NAME: ${{ secrets.SQL_DB_NAME_QA }}
  SQL_DB_LOGGING_ENABLED: ${{ vars.SQL_DB_LOGGING_ENABLED }}
  ACBS_DURABLE_FUNCTIONS_LOG_DELETION_SCHEDULE: ${{ vars.ACBS_DURABLE_FUNCTIONS_LOG_DELETION_SCHEDULE }}
  CONTACT_US_EMAIL_ADDRESS: ${{ vars.CONTACT_US_EMAIL_ADDRESS }}
  FF_FEE_RECORD_CORRECTION_ENABLED: ${{ vars.FF_FEE_RECORD_CORRECTION_ENABLED }}
  FF_TFM_DEAL_CANCELLATION_ENABLED: ${{ vars.FF_TFM_DEAL_CANCELLATION_ENABLED }}
  FF_PORTAL_FACILITY_AMENDMENTS_ENABLED: ${{ vars.FF_PORTAL_FACILITY_AMENDMENTS_ENABLED }}
  FF_TFM_SSO_ENABLED: ${{ vars.FF_TFM_SSO_ENABLED }}
  FF_SALESFORCE_CUSTOMER_CREATION_ENABLED: ${{ vars.FF_SALESFORCE_CUSTOMER_CREATION_ENABLED }}
  GEF_DEAL_VERSION: ${{ vars.GEF_DEAL_VERSION }}
  ENTRA_ID_CLIENT_ID: ${{ vars.ENTRA_ID_CLIENT_ID }}
  ENTRA_ID_CLOUD_INSTANCE: ${{ vars.ENTRA_ID_CLOUD_INSTANCE }}
  ENTRA_ID_TENANT_ID: ${{ vars.ENTRA_ID_TENANT_ID }}
  ENTRA_ID_CLIENT_SECRET: ${{ vars.ENTRA_ID_CLIENT_SECRET }}
  ENTRA_ID_REDIRECT_URL: ${{ vars.ENTRA_ID_REDIRECT_URL }}
  DEAL_CANCELLATION_SCHEDULE: ${{ vars.DEAL_CANCELLATION_SCHEDULE }}
  RECORD_CORRECTION_TRANSIENT_FORM_DATA_DELETE_SCHEDULE: ${{ vars.RECORD_CORRECTION_TRANSIENT_FORM_DATA_DELETE_SCHEDULE }}
  UKEF_GEF_REPORTING_EMAIL_RECIPIENT: ${{ secrets.UKEF_GEF_REPORTING_EMAIL_RECIPIENT }}

jobs:
  # 1. Setup test infrastructure
  setup:
    name: Infrastructure setup üîß
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
      TZ: ${{ env.TZ }}
    steps:
      - name: Environment üß™
        run: echo "Environment set to ${{ env.environment }}"

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.TZ }}"


  #6. E2E - TFM
  e2e-tests-tfm:
    name: E2E TFM üë∑
    needs: [setup]
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest

    strategy:
      # Do not cancel in-progress jobs upon failure
      fail-fast: false
      # Single dimension matrix
      matrix:
        spec:
          [
            'case-amendments/add-bank-decision/*.spec.js',
          ]

    concurrency:
      group: e2e-tests-tfm-${{ github.workflow }}-${{ github.workflow_ref }}-${{ matrix.spec }}
      cancel-in-progress: true

    steps:
      - name: Node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Repository
        uses: actions/checkout@v5

      - name: Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: ${{ needs.setup.outputs.TZ }}

      - name: Dependencies
        uses: ./.github/actions/rerun
        with:
          command: npm ci
          retries: ${{ vars.RETRY_LIMIT }}

      - name: Docker
        uses: ./.github/actions/rerun
        with:
          command: docker compose up --build -d
          retries: ${{ vars.RETRY_LIMIT }}
          env: |
            GOV_NOTIFY_API_KEY=${{ vars.MOCK_E2E_GOV_NOTIFY_API_KEY }}
            MOCK_E2E_NUMBER_GENERATOR=${{ vars.MOCK_E2E_NUMBER_GENERATOR }}

      - name: Initialise
        uses: ./.github/actions/rerun
        with:
          command: sleep 100s && npm run load
          working-directory: ./utils
          env: |
            MONGODB_URI=${{ secrets.MONGODB_URI_LOCALHOST }}
            GOV_NOTIFY_API_KEY=${{ vars.MOCK_E2E_GOV_NOTIFY_API_KEY }}
          retries: ${{ vars.RETRY_LIMIT }}

      - name: SQL
        working-directory: ./libs/common
        env:
          SQL_DB_HOST: ${{ secrets.SQL_DB_HOST_LOCAL }}
        run: npm run db:migrate

      - name: Execute
        uses: ./.github/actions/rerun
        with:
          command: npx cypress run --config video=false --browser electron --project ./tfm --record false --spec './tfm/cypress/e2e/journeys/${{ matrix.spec }}'
          working-directory: ./e2e-tests
          env: |
            MONGODB_URI=${{ secrets.MONGODB_URI_LOCALHOST }}
            SQL_DB_HOST=${{ secrets.SQL_DB_HOST_LOCAL }}
            GOV_NOTIFY_API_KEY=${{ vars.MOCK_E2E_GOV_NOTIFY_API_KEY }}
            MOCK_E2E_NUMBER_GENERATOR=${{ vars.MOCK_E2E_NUMBER_GENERATOR }}
            TZ=${{ vars.TIMEZONE }}
          retries: ${{ vars.RETRY_LIMIT }}

      - name: Screenshots

        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-tests-tfm-${{ github.strategy.job-index }}-${{ github.job.check_run_id }}-${{ github.run_attempt }}
          path: ./e2e-tests/tfm/cypress/screenshots/
          retention-days: 1

  #8. E2E - FF
  e2e-tests-ff:
    name: E2E feature flag üë∑
    needs: [setup]
    env:
      # Various feature flags
      FF_FEE_RECORD_CORRECTION_ENABLED: 'true'
      FF_TFM_DEAL_CANCELLATION_ENABLED: 'true'
      FF_PORTAL_FACILITY_AMENDMENTS_ENABLED: 'true'
      FF_TFM_SSO_ENABLED: 'false'
      FF_SALESFORCE_CUSTOMER_CREATION_ENABLED: 'true'
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest

    strategy:
      # Do not cancel in-progress jobs upon failure
      fail-fast: false
      # Single dimension matrix
      matrix:
        spec:
          [
            './tfm/cypress/e2e/journeys/case-amendments/add-bank-decision/*.spec.js',
          ]

    concurrency:
      group: e2e-tests-ukef-ff-${{ github.workflow }}-${{ github.workflow_ref }}-${{ matrix.spec }}
      cancel-in-progress: true

    steps:
      - name: Node
        uses: actions/setup-node@v5
        with:
          node-version: ${{ vars.NODE_VERSION }}

      - name: Repository
        uses: actions/checkout@v5

      - name: Timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: ${{ needs.setup.outputs.TZ }}

      - name: Dependencies
        uses: ./.github/actions/rerun
        with:
          command: npm ci
          retries: ${{ vars.RETRY_LIMIT }}

      - name: Docker
        uses: ./.github/actions/rerun
        with:
          command: docker compose up --build -d
          retries: ${{ vars.RETRY_LIMIT }}
          env: |
            GOV_NOTIFY_API_KEY=${{ vars.MOCK_E2E_GOV_NOTIFY_API_KEY }}
            MOCK_E2E_NUMBER_GENERATOR=${{ vars.MOCK_E2E_NUMBER_GENERATOR }}

      - name: Initialise
        uses: ./.github/actions/rerun
        with:
          command: sleep 100s && npm run load
          working-directory: ./utils
          env: |
            MONGODB_URI=${{ secrets.MONGODB_URI_LOCALHOST }}
            GOV_NOTIFY_API_KEY=${{ vars.MOCK_E2E_GOV_NOTIFY_API_KEY }}
          retries: ${{ vars.RETRY_LIMIT }}

      - name: SQL
        working-directory: ./libs/common
        env:
          SQL_DB_HOST: ${{ secrets.SQL_DB_HOST_LOCAL }}
        run: npm run db:migrate

      - name: Project
        id: project
        run: |
          directory=$(echo ${{ matrix.spec }} | cut -d / -f2)
          echo "::set-output name=directory::$directory"

      - name: Execute
        uses: ./.github/actions/rerun
        with:
          command: npx cypress run --config video=false --browser electron --project ./${{ steps.project.outputs.directory }} --record false --spec '${{ matrix.spec }}'
          working-directory: ./e2e-tests
          env: |
            MONGODB_URI=${{ secrets.MONGODB_URI_LOCALHOST }}
            SQL_DB_HOST=${{ secrets.SQL_DB_HOST_LOCAL }}
            GOV_NOTIFY_API_KEY=${{ vars.MOCK_E2E_GOV_NOTIFY_API_KEY }}
            MOCK_E2E_NUMBER_GENERATOR=${{ vars.MOCK_E2E_NUMBER_GENERATOR }}
            TZ=${{ vars.TIMEZONE }}
          retries: ${{ vars.RETRY_LIMIT }}

      - name: Screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: e2e-tests-ukef-ff-${{ github.strategy.job-index }}-${{ github.job.check_run_id }}-${{ github.run_attempt }}
          path: ./e2e-tests/${{ steps.project.outputs.directory }}/cypress/screenshots/
          retention-days: 1