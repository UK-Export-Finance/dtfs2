# DTFS Git Hub Actions
#####################################
# This GHA is responsible for initiating various sets of
# tests, upon a PR creation across all the microservices.

name: Quality Assurance - Tests
run-name: Executing test QA on ${{ github.repository }} üöÄ

on:
  pull_request:
    branches: [main]
    paths:
      - "package*.json"
      - "docker*.yml"
      - ".github/workflows/**"
      - "gef-ui/**"
      - "portal/**"
      - "portal-api/**"
      - "trade-finance-manager-ui/**"
      - "trade-finance-manager-api/**"
      - "external-api/**"
      - "dtfs-central-api/**"
      - "azure-functions/**"
      - "e2e-tests/**"
      - "utils/mock-data-loader/**"

env:
  environment: dev
  timezone: ${{ vars.TIMEZONE }}
  node: ${{ vars.NODE_VERSION }}
  credentials: ${{ secrets.AZURE_DIGITAL_DEV }}
  AZURE_PORTAL_STORAGE_ACCOUNT: ${{ secrets.AZURE_PORTAL_STORAGE_ACCOUNT }}
  AZURE_PORTAL_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_PORTAL_STORAGE_ACCESS_KEY }}
  AZURE_PORTAL_FILESHARE_NAME: ${{ secrets.AZURE_PORTAL_FILESHARE_NAME }}
  AZURE_PORTAL_EXPORT_FOLDER: ${{ secrets.AZURE_PORTAL_EXPORT_FOLDER }}
  GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY }}
  GOV_NOTIFY_EMAIL_RECIPIENT: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT }}
  JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
  JWT_VALIDATING_KEY: ${{ secrets.JWT_VALIDATING_KEY }}
  ORDNANCE_SURVEY_API_URL: "https://api.os.co.uk"
  ORDNANCE_SURVEY_API_KEY: ${{ secrets.ORDNANCE_SURVEY_API_KEY }}
  APIM_TFS_URL: ${{ secrets.APIM_TFS_URL }}
  APIM_TFS_KEY: ${{ secrets.APIM_TFS_KEY }}
  APIM_TFS_VALUE: ${{ secrets.APIM_TFS_VALUE }}
  APIM_MDM_URL: ${{ secrets.APIM_MDM_URL }}
  APIM_MDM_KEY: ${{ secrets.APIM_MDM_KEY }}
  APIM_MDM_VALUE: ${{ secrets.APIM_MDM_VALUE }}
  APIM_ESTORE_URL: ${{ secrets.APIM_ESTORE_URL }}
  APIM_ESTORE_KEY: ${{ secrets.APIM_ESTORE_KEY }}
  APIM_ESTORE_VALUE: ${{ secrets.APIM_ESTORE_VALUE }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  COMPANIES_HOUSE_API_URL: "https://api.companieshouse.gov.uk"
  COMPANIES_HOUSE_API_KEY: ${{ secrets.COMPANIES_HOUSE_API_KEY }}
  UKEF_TFM_API_SYSTEM_KEY: ${{ secrets.UKEF_TFM_API_SYSTEM_KEY }}
  UKEF_TFM_API_REPORTS_KEY: ${{ secrets.UKEF_TFM_API_REPORTS_KEY }}
  ESTORE_URL: ${{ secrets.ESTORE_URL }}
  TFM_API_KEY: ${{ secrets.TFM_API_KEY }}
  PORTAL_API_KEY: ${{ secrets.PORTAL_API_KEY }}
  DTFS_CENTRAL_API_KEY: ${{ secrets.DTFS_CENTRAL_API_KEY }}
  EXTERNAL_API_KEY: ${{ secrets.EXTERNAL_API_KEY }}
  NODE_ENV: ${{ secrets.NODE_ENV }}
  CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
  PORTAL_API_URL: http://localhost:5001
  DTFS_CENTRAL_API_URL: http://localhost:5005
  TFM_API_URL: http://localhost:5004
  RATE_LIMIT_THRESHOLD: ${{ vars.RATE_LIMIT_THRESHOLD }}

jobs:
  # 1. Setup test infrastructure
  setup:
    name: Infrastructure setup üîß
    runs-on: [self-hosted, linux]
    outputs:
      environment: ${{ env.environment }}
      timezone: ${{ env.timezone }}
    steps:
      - name: Environment üß™
        run: echo "Environment set to ${{ env.environment }}"

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.timezone }}"

  # 2. API tests
  api-tests:
    name: API üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: [self-hosted, linux]

    concurrency:
      group: api-tests-${{ github.workflow }}-${{ github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Repository
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Start
        working-directory: ./
        run: docker-compose -f docker-compose.gha.yml up --build -d

      - name: Wait
        run: sleep 30s

      - name: Mock data
        working-directory: ./utils/mock-data-loader
        run: npm run load

      - name: Portal UI
        run: docker-compose exec -T portal npm run api-test

      - name: GEF UI
        run: docker-compose exec -T gef-ui npm run api-test

      - name: Portal API
        run: docker-compose exec -T portal-api npm run api-test

      - name: TFM UI
        run: docker-compose exec -T trade-finance-manager-ui npm run api-test

      - name: TFM API
        run: docker-compose exec -T trade-finance-manager-api npm run api-test

      - name: Central
        run: docker-compose exec -T dtfs-central-api npm run api-test

      - name: External
        run: docker-compose exec -T external-api npm run api-test

      - name: Stop
        working-directory: ./
        run: docker-compose -f docker-compose.gha.yml down

      - name: ACBS
        working-directory: ./azure-functions/acbs-function
        run: npm run api-test

      - name: Number generator
        working-directory: ./azure-functions/number-generator-function
        run: npm run api-test

  # 3. Unit tests
  unit-tests:
    name: Unit üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: [self-hosted, linux]

    concurrency:
      group: unit-tests-${{ github.workflow }}-${{ github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Repository
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Portal
        working-directory: ./portal-api
        run: npm run unit-test

      - name: Central
        working-directory: ./dtfs-central-api
        run: npm run unit-test

      - name: External
        working-directory: ./external-api
        run: npm run unit-test

      - name: TFM
        working-directory: ./trade-finance-manager-api
        run: npm run unit-test

  # 4. UI integration tests
  integration-tests:
    name: UI üé®
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: [self-hosted, linux]

    concurrency:
      group: integration-tests-${{ github.workflow }}-${{ github.run_id }}
      cancel-in-progress: true

    steps:
      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Repository
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Portal UI
        working-directory: ./portal
        run: npm run test

      - name: GEF UI
        working-directory: ./gef-ui
        run: npm run test

      - name: TFM UI
        working-directory: ./trade-finance-manager-ui
        run: npm run test

  # 5. E2E - PORTAL
  e2e-tests-portal:
    name: E2E Portal üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        machines: [1, 2, 3, 4]

    steps:
      - uses: actions/checkout@v3

      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Docker
        run: docker-compose -f docker-compose.gha.yml up --build -d

      - name: 30s Sleep
        run: sleep 30s

      - name: Mock data
        working-directory: ./utils/mock-data-loader
        run: npm run load

      - name: DOF wakeup
        run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'

      - name: BSS/EWCS
        uses: cypress-io/github-action@v4
        with:
          install: false
          record: true
          parallel: true
          browser: chrome
          group: "E2E-PORTAL"
          project: ./e2e-tests/portal
          config: video=false
        env:
          TZ: ${{ vars.TIMEZONE }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@main
        with:
          name: screenshots
          path: "./cypress/screenshots"

  # 6. E2E - GEF
  e2e-tests-gef:
    name: E2E GEF üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        machines: [1, 2, 3, 4]

    steps:
      - uses: actions/checkout@v3

      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Docker
        run: docker-compose -f docker-compose.gha.yml up --build -d

      - name: 30s Sleep
        run: sleep 30s

      - name: Mock data
        working-directory: ./utils/mock-data-loader
        run: npm run load

      - name: DOF wakeup
        run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'

      - name: GEF
        uses: cypress-io/github-action@v4
        with:
          install: false
          record: true
          parallel: true
          browser: chrome
          group: "E2E-GEF"
          project: ./e2e-tests/gef
          config: video=false
        env:
          TZ: ${{ vars.TIMEZONE }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@main
        with:
          name: screenshots
          path: "./cypress/screenshots"

  # 7. E2E - TFM
  e2e-tests-tfm:
    name: E2E TFM üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        machines: [1, 2, 3, 4]

    steps:
      - uses: actions/checkout@v3

      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Docker
        run: docker-compose -f docker-compose.gha.yml up --build -d

      - name: 30s Sleep
        run: sleep 30s

      - name: Mock data
        working-directory: ./utils/mock-data-loader
        run: npm run load

      - name: DOF wakeup
        run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'

      - name: TFM
        uses: cypress-io/github-action@v4
        with:
          install: false
          record: true
          parallel: true
          browser: chrome
          group: "E2E-TFM"
          project: ./e2e-tests/trade-finance-manager
          config: video=false
        env:
          TZ: ${{ vars.TIMEZONE }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@main
        with:
          name: screenshots
          path: "./cypress/screenshots"

  # 8. E2E - TFM
  e2e-tests-submit-tfm:
    name: E2E üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: ubuntu-latest

    strategy:
      fail-fast: true
      matrix:
        machines: [1, 2, 3, 4]

    steps:
      - uses: actions/checkout@v3

      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Docker
        run: |
          source secrets/set_jwt_keypair.sh
          docker-compose -f docker-compose.gha.yml up --build -d

      - name: 30s Sleep
        run: sleep 30s

      - name: Mock data
        working-directory: ./utils/mock-data-loader
        run: npm run load

      - name: DOF wakeup
        run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'

      - name: Submit to UKEF
        uses: cypress-io/github-action@v4
        with:
          install: false
          record: true
          parallel: true
          browser: chrome
          group: "E2E-TFM"
          project: ./e2e-tests/submit-to-trade-finance-manager
          config: video=false
        env:
          TZ: ${{ vars.TIMEZONE }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Screenshots
        if: ${{ failure() }}
        uses: actions/upload-artifact@main
        with:
          name: screenshots
          path: "./cypress/screenshots"
