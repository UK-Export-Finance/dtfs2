name: Production environment infrastructure

on:
  push:
    branches: [ prod ]

env:
  # Environment
  environment: prod
  credentials: ${{ secrets.AZURE_DIGITAL_PROD }}
  resource_group: ${{ secrets.PROD_RESOURCE_GROUP }}
  app_service_plan: prod
  # Container registry
  registry: ${{ secrets.PROD_ACR_REGISTRY }}
  # App service settings
  DEAL_API_URL: "https://tfs-prod-portal-api.azurewebsites.net"
  COMPANIES_HOUSE_API_URL: ="https://api.companieshouse.gov.uk"
  # App service secrets
  SESSION_SECRET: "${{ secrets.PROD_SESSION_SECRET }}"
  COMPANIES_HOUSE_API_KEY: "${{ secrets.COMPANIES_HOUSE_API_KEY }}"
  AZURE_PORTAL_STORAGE_ACCOUNT: "${{ secrets.PROD_AZURE_PORTAL_STORAGE_ACCOUNT }}"
  AZURE_PORTAL_STORAGE_ACCESS_KEY: "${{ secrets.PROD_AZURE_PORTAL_STORAGE_ACCESS_KEY }}"
  AZURE_PORTAL_FILESHARE_NAME: "${{ secrets.PROD_AZURE_PORTAL_FILESHARE_NAME }}"
  AZURE_PORTAL_EXPORT_FOLDER: "${{ secrets.PROD_AZURE_PORTAL_EXPORT_FOLDER }}"
  AZURE_WORKFLOW_STORAGE_ACCOUNT: "${{ secrets.PROD_AZURE_WORKFLOW_STORAGE_ACCOUNT }}"
  AZURE_WORKFLOW_STORAGE_ACCESS_KEY: "${{ secrets.PROD_AZURE_WORKFLOW_STORAGE_ACCESS_KEY }}"
  AZURE_WORKFLOW_FILESHARE_NAME: "${{ secrets.PROD_AZURE_WORKFLOW_FILESHARE_NAME }}"
  AZURE_WORKFLOW_EXPORT_FOLDER: "${{ secrets.PROD_AZURE_WORKFLOW_EXPORT_FOLDER }}"
  AZURE_WORKFLOW_IMPORT_FOLDER: "${{ secrets.PROD_AZURE_WORKFLOW_IMPORT_FOLDER }}"
  MONGO_INITDB_DATABASE: "${{ secrets.MONGO_INITDB_DATABASE }}"
  MONGODB_URI: "${{ secrets.PROD_MONGODB_URI }}"
  JWT_SIGNING_KEY: "${{ secrets.PROD_JWT_SIGNING_KEY }}"
  JWT_VALIDATING_KEY: "${{ secrets.PROD_JWT_VALIDATING_KEY }}"
  GOV_NOTIFY_API_KEY: ="${{ secrets.PROD_GOV_NOTIFY_API_KEY }}"
  GOV_NOTIFY_EMAIL_RECIPIENT: "${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT }}"

  DTFS_PORTAL_SCHEDULER: false
  FETCH_WORKFLOW_TYPE_B_SCHEDULE: "* * * * *"

# Below this line sholud be the same for all environments

jobs:

  portal-ui:
    name: Portal UI
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ env.resource_group }}

    - name: Create
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp create --name tfs-${{ env.environment }}-portal-ui \
            --plan ${{ env.app_service_plan }} \
            --deployment-container-image-name ${{ env.registry }}/portal-ui:${{ env.environment }}

    - name: Always-on
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp config set --name tfs-${{ env.environment }}-portal-ui \
            --always-on true

    - name: Continuous deployment
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment container config --name tfs-${{ env.environment }}-portal-ui \
            --enable-cd true

    - name: Enable container logging
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp log config --name tfs-${{ env.environment }}-portal-ui \
            --docker-container-logging filesystem

    - name: Environment variables
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          # NB we're setting PORT for the container and WEBSITES_PORT for Azure.
          az webapp config appsettings set --name tfs-${{ env.environment }}-portal-ui \
            --settings \
              PORT=5000 \
              WEBSITES_PORT=5000 \
              DEAL_API_URL="${{ env.DEAL_API_URL }}" \
              COMPANIES_HOUSE_API_URL="${{ env.COMPANIES_HOUSE_API_URL }}"

    - name: Secrets
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp config connection-string set --name tfs-${{ env.environment }}-portal-ui \
            --connection-string-type custom \
            --settings \
              SESSION_SECRET="${{ env.SESSION_SECRET }}" \
              COMPANIES_HOUSE_API_KEY="${{ env.COMPANIES_HOUSE_API_KEY }}"

  portal-api:
    name: Portal API
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ env.resource_group }}

    - name: Create
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp create --name tfs-${{ env.environment }}-portal-api \
            --plan ${{ env.app_service_plan }} \
            --deployment-container-image-name ${{ env.registry }}/portal-api:${{ env.environment }}

    - name: Always-on
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp config set --name tfs-${{ env.environment }}-portal-api \
            --always-on true

    - name: Continuous deployment
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment container config --name tfs-${{ env.environment }}-portal-api \
            --enable-cd true

    - name: Enable container logging
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp log config --name tfs-${{ env.environment }}-portal-api \
            --docker-container-logging filesystem

    - name: Environment variables
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          # NB we're setting PORT for the container and WEBSITES_PORT for Azure.
          az webapp config appsettings set --name tfs-${{ env.environment }}-portal-api \
            --settings \
              PORT=5000 \
              WEBSITES_PORT=5000

    - name: Secrets
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp config connection-string set --name tfs-${{ env.environment }}-portal-api \
            --connection-string-type custom \
            --settings \
              AZURE_PORTAL_EXPORT_FOLDER="${{ env.AZURE_PORTAL_EXPORT_FOLDER }}" \
              AZURE_PORTAL_FILESHARE_NAME="${{ env.AZURE_PORTAL_FILESHARE_NAME }}" \
              AZURE_PORTAL_STORAGE_ACCESS_KEY="${{ env.AZURE_PORTAL_STORAGE_ACCESS_KEY }}" \
              AZURE_PORTAL_STORAGE_ACCOUNT="${{ env.AZURE_PORTAL_STORAGE_ACCOUNT }}" \
              AZURE_WORKFLOW_EXPORT_FOLDER="${{ env.AZURE_WORKFLOW_EXPORT_FOLDER }}" \
              AZURE_WORKFLOW_FILESHARE_NAME="${{ env.AZURE_WORKFLOW_FILESHARE_NAME }}" \
              AZURE_WORKFLOW_IMPORT_FOLDER="${{ env.AZURE_WORKFLOW_IMPORT_FOLDER }}" \
              AZURE_WORKFLOW_STORAGE_ACCOUNT="${{ env.AZURE_WORKFLOW_STORAGE_ACCOUNT }}" \
              AZURE_WORKFLOW_STORAGE_ACCESS_KEY="${{ env.AZURE_WORKFLOW_STORAGE_ACCESS_KEY }}" \
              MONGO_INITDB_DATABASE="${{ env.MONGO_INITDB_DATABASE }}" \
              MONGODB_URI="${{ env.MONGODB_URI }}" \
              JWT_SIGNING_KEY="${{ env.JWT_SIGNING_KEY }}" \
              JWT_VALIDATING_KEY="${{ env.JWT_VALIDATING_KEY }}" \
              GOV_NOTIFY_API_KEY="${{ env.GOV_NOTIFY_API_KEY }}" \
              GOV_NOTIFY_EMAIL_RECIPIENT="${{ env.GOV_NOTIFY_EMAIL_RECIPIENT }}"


  cosmos-db:
    name: Mongo
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ env.resource_group }}

    - name: Create
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az cosmosdb create --name tfs-${{ env.environment }}-mongo --kind MongoDB