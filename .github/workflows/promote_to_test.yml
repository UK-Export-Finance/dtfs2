name: Deploy test

on:
  push:
    branches: [ test ]

env:
  environment: test
  credentials: ${{ secrets.AZURE_DIGITAL_TEST }}
  resource_group: ${{ secrets.TEST_RESOURCE_GROUP }}

jobs:

  promote:
    name: Promote container images
    runs-on: ubuntu-latest
    steps:
    - name: Log in to Dev container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.DEV_ACR_REGISTRY }}
        username: ${{ secrets.DEV_ACR_USERNAME }}
        password: ${{ secrets.DEV_ACR_PASSWORD }}
    - name: Log in to Test container registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.TEST_ACR_REGISTRY }}
        username: ${{ secrets.TEST_ACR_USERNAME }}
        password: ${{ secrets.TEST_ACR_PASSWORD }}
    - name: Tag images
      run: |
        from=dev
        to=test

        docker pull ${{ secrets.DEV_ACR_REGISTRY }}/portal-ui:$from
        docker tag ${{ secrets.DEV_ACR_REGISTRY }}/portal-ui:$from ${{ secrets.TEST_ACR_REGISTRY }}/portal-ui:$to
        docker push ${{ secrets.TEST_ACR_REGISTRY }}/portal-ui:$to

        docker pull ${{ secrets.DEV_ACR_REGISTRY }}/portal-api:$from
        docker tag ${{ secrets.DEV_ACR_REGISTRY }}/portal-api:$from ${{ secrets.TEST_ACR_REGISTRY }}/portal-api:$to
        docker push ${{ secrets.TEST_ACR_REGISTRY }}/portal-api:$to

  deploy:
    name: Deploy container images
    needs: promote
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ env.credentials }}

    - name: Defaults
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az configure --defaults location=uksouth
          az configure --defaults group=${{ env.resource_group }}

    - name: Create slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot create --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-portal-ui
          az webapp deployment slot create --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }} --configuration-source tfs-${{ env.environment }}-portal-api

    - name: Deploy slot
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot swap --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }} --action swap
          az webapp deployment slot swap --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }} --action swap
          
    - name: Delete slot
      # Clean up the slot regardless of errors
      if: ${{ always() }}
      uses: Azure/cli@v1.0.0
      with:
        inlineScript: |
          az webapp deployment slot delete --name tfs-${{ env.environment }}-portal-ui --slot ${{ github.sha }}
          az webapp deployment slot delete --name tfs-${{ env.environment }}-portal-api --slot ${{ github.sha }}
          