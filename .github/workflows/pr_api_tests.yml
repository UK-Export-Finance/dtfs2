name: PR - API tests

on:
  pull_request:
    branches: [ main ]
    paths:
    - 'gef-ui/**'
    - 'portal/**'
    - 'portal-api/**'
    - 'trade-finance-manager-ui/**'
    - 'trade-finance-manager-api/**'
    - 'reference-data-proxy/**'
    - 'dtfs-central-api/**'
    - 'e2e-tests/**'
    - 'utils/mock-data-loader/**'

env:
  environment: dev
  credentials: ${{ secrets.AZURE_DIGITAL_DEV }}
  AZURE_PORTAL_STORAGE_ACCOUNT: ${{ secrets.AZURE_PORTAL_STORAGE_ACCOUNT }}
  AZURE_PORTAL_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_PORTAL_STORAGE_ACCESS_KEY }}
  AZURE_PORTAL_FILESHARE_NAME: ${{ secrets.AZURE_PORTAL_FILESHARE_NAME }}
  AZURE_PORTAL_EXPORT_FOLDER: ${{ secrets.AZURE_PORTAL_EXPORT_FOLDER }}
  GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY }}
  GOV_NOTIFY_EMAIL_RECIPIENT: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT }}
  JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
  JWT_VALIDATING_KEY: ${{ secrets.JWT_VALIDATING_KEY }}
  MULESOFT_API_KEY: ${{ secrets.MULESOFT_API_KEY }}
  MULESOFT_API_SECRET: ${{ secrets.MULESOFT_API_SECRET }}
  MULESOFT_API_NUMBER_GENERATOR_URL: ${{ secrets.MULESOFT_API_NUMBER_GENERATOR_URL }}
  MULESOFT_API_ACBS_DEAL_URL: ${{ secrets.MULESOFT_API_ACBS_DEAL_URL }}
  MULESOFT_API_ACBS_FACILITY_URL: ${{ secrets.MULESOFT_API_ACBS_FACILITY_URL }}
  MULESOFT_API_PARTY_DB_KEY: ${{ secrets.MULESOFT_API_PARTY_DB_KEY }}
  MULESOFT_API_PARTY_DB_SECRET: ${{ secrets.MULESOFT_API_PARTY_DB_SECRET }}
  MULESOFT_API_PARTY_DB_URL: ${{ secrets.MULESOFT_API_PARTY_DB_URL }}
  APIM_MDM_URL: ${{ secrets.APIM_MDM_URL }}
  APIM_MDM_KEY: ${{ secrets.APIM_MDM_KEY }}
  APIM_MDM_VALUE: ${{ secrets.APIM_MDM_VALUE }}
  MULESOFT_API_EXPOSURE_PERIOD_URL: ${{ secrets.MULESOFT_API_EXPOSURE_PERIOD_URL }}
  MULESOFT_API_UKEF_TF_EA_URL: ${{ secrets.MULESOFT_API_UKEF_TF_EA_URL }}
  MULESOFT_API_UKEF_MDM_EA_URL: ${{ secrets.MULESOFT_API_UKEF_MDM_EA_URL }}
  MULESOFT_API_UKEF_MDM_EA_KEY: ${{ secrets.MULESOFT_API_UKEF_MDM_EA_KEY }}
  MULESOFT_API_UKEF_MDM_EA_SECRET: ${{ secrets.MULESOFT_API_UKEF_MDM_EA_SECRET }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  COMPANIES_HOUSE_API_KEY: ${{ secrets.COMPANIES_HOUSE_API_KEY }}
  UKEF_TFM_API_SYSTEM_KEY: ${{ secrets.UKEF_TFM_API_SYSTEM_KEY }}
  UKEF_TFM_API_REPORTS_KEY: ${{ secrets.UKEF_TFM_API_REPORTS_KEY }}
  ESTORE_URL: ${{ secrets.ESTORE_URL }}

jobs:
  set-environment:
    name: Set Environment
    runs-on: [self-hosted, api-tests]
    outputs:
      environment: ${{ env.environment }}
    steps:
    - name: Initialise Environment
      run: echo Setting environment to ${{ env.environment }}

  api-tests:
    name: "Run API tests"

    # Cancel Previous runs
    concurrency:
      group: api-tests-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    defaults:
      run:
        working-directory: utils/mock-data-loader
    runs-on: [self-hosted, api-tests]

    steps:
    - uses: actions/checkout@v3
    - name: Start Docker Compose
      working-directory: ./
      run: |
        docker network prune -f
        docker-compose -f docker-compose.gha.yml up --build -d

    - name: Sleep for 30 seconds
      run: sleep 30s

    - name: Install mock data dependencies
      run: npm ci

    - name: Load mock data
      run: node ./re-insert-mocks.js

    - name: Run TFM API tests
      run: docker-compose exec -T trade-finance-manager-api npm run api-test

    - name: Load mock data
      run: node ./re-insert-mocks.js

    - name: Run Reference Data Proxy API tests
      run: docker-compose exec -T reference-data-proxy npm run api-test

    - name: Load mock data
      run: node ./re-insert-mocks.js

    - name: Run Portal API tests
      run: docker-compose exec -T portal-api npm run api-test

    - name: Load mock data
      run: node ./re-insert-mocks.js

    - name: Run Central API tests
      run: docker-compose exec -T dtfs-central-api npm run api-test

    - name: Stop containers
      if: always()
      working-directory: ./
      run: docker-compose -f docker-compose.gha.yml down

    - uses: act10ns/slack@v2
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#dtfs-github-actions'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()
