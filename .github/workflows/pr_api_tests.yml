# DTFS Git Hub Actions
#####################################
# This GHA is responsible for initiating api test
# upon a PR creation for all the microservices.

name: Quality Assurance - API tests
run-name: Executing test QA on ${{ github.repository }} üöÄ

on:
  pull_request:
    branches: [main]
    paths:
      - 'gef-ui/**'
      - 'portal/**'
      - 'portal-api/**'
      - 'trade-finance-manager-ui/**'
      - 'trade-finance-manager-api/**'
      - 'external-api/**'
      - 'dtfs-central-api/**'
      - 'e2e-tests/**'
      - 'utils/mock-data-loader/**'

env:
  environment: dev
  timezone: 'Europe/London'
  node: ${{ vars.NODE_VERSION }}
  credentials: ${{ secrets.AZURE_DIGITAL_DEV }}
  AZURE_PORTAL_STORAGE_ACCOUNT: ${{ secrets.AZURE_PORTAL_STORAGE_ACCOUNT }}
  AZURE_PORTAL_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_PORTAL_STORAGE_ACCESS_KEY }}
  AZURE_PORTAL_FILESHARE_NAME: ${{ secrets.AZURE_PORTAL_FILESHARE_NAME }}
  AZURE_PORTAL_EXPORT_FOLDER: ${{ secrets.AZURE_PORTAL_EXPORT_FOLDER }}
  GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY }}
  GOV_NOTIFY_EMAIL_RECIPIENT: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT }}
  JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
  JWT_VALIDATING_KEY: ${{ secrets.JWT_VALIDATING_KEY }}
  ORDNANCE_SURVEY_API_URL: 'https://api.os.co.uk'
  ORDNANCE_SURVEY_API_KEY: ${{ secrets.ORDNANCE_SURVEY_API_KEY }}
  APIM_TFS_URL: ${{ secrets.APIM_TFS_URL }}
  APIM_TFS_KEY: ${{ secrets.APIM_TFS_KEY }}
  APIM_TFS_VALUE: ${{ secrets.APIM_TFS_VALUE }}
  MULESOFT_API_PARTY_DB_KEY: ${{ secrets.MULESOFT_API_PARTY_DB_KEY }}
  MULESOFT_API_PARTY_DB_SECRET: ${{ secrets.MULESOFT_API_PARTY_DB_SECRET }}
  MULESOFT_API_PARTY_DB_URL: ${{ secrets.MULESOFT_API_PARTY_DB_URL }}
  APIM_MDM_URL: ${{ secrets.APIM_MDM_URL }}
  APIM_MDM_KEY: ${{ secrets.APIM_MDM_KEY }}
  APIM_MDM_VALUE: ${{ secrets.APIM_MDM_VALUE }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  COMPANIES_HOUSE_API_URL: 'https://api.companieshouse.gov.uk'
  COMPANIES_HOUSE_API_KEY: ${{ secrets.COMPANIES_HOUSE_API_KEY }}
  UKEF_TFM_API_SYSTEM_KEY: ${{ secrets.UKEF_TFM_API_SYSTEM_KEY }}
  UKEF_TFM_API_REPORTS_KEY: ${{ secrets.UKEF_TFM_API_REPORTS_KEY }}
  ESTORE_URL: ${{ secrets.ESTORE_URL }}
  API_KEY: ${{ secrets.API_KEY }}
  NODE_ENV: ${{ secrets.NODE_ENV }}
  CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}

jobs:
  # 1. Setup test infrastructure
  setup:
    name: Infrastructure setup üîß
    runs-on: [ubuntu-latest]
    outputs:
      environment: ${{ env.environment }}
      timezone: ${{ env.timezone }}
    steps:
      - name: Environment üß™
        run: echo "Environment set to ${{ env.environment }}"

      - name: Timezone üåê
        run: echo "Timezone set to ${{ env.timezone }}"

  # 2. API tests
  api-tests:
    name: API üë∑
    needs: setup
    environment:
      name: ${{ needs.setup.outputs.environment }}
    runs-on: [ubuntu-latest]
    concurrency:
      group: api-tests-${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Timezone
        uses: szenius/set-timezone@v1.2
        with:
          timezoneLinux: ${{ needs.setup.outputs.timezone }}

      - name: Repository
        uses: actions/checkout@v3

      - name: Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.node }}

      - name: Dependencies
        working-directory: ./
        run: npm run ci:all

      - name: Start
        working-directory: ./
        run: docker-compose -f docker-compose.gha.yml up --build -d

      - name: Wait
        run: sleep 30s

      - name: Mock data
        working-directory: ./utils/mock-data-loader
        env:
          API_KEY: ${{ secrets.API_KEY }}
          DEAL_API_URL: http://portal-api:5001
        run: npm run load

      - name: Portal
        run: docker-compose exec -T portal-api npm run api-test

      - name: TFM
        run: docker-compose exec -T trade-finance-manager-api npm run api-test

      - name: Cental
        run: docker-compose exec -T dtfs-central-api npm run api-test

      - name: External
        run: docker-compose exec -T external-api npm run api-test

      - name: Stop
        working-directory: ./
        run: docker-compose -f docker-compose.gha.yml down

      - name: ACBS
        working-directory: ./azure-functions/acbs-function
        run: npm run api-test

      - name: Number generator
        working-directory: ./azure-functions/number-generator-function
        run: npm run api-test
