name: Test jobs

on:
  push:
    branches: [ master ]
    
env:
  TAG: latest
  COMPANIES_HOUSE_API_KEY: ${{ secrets.COMPANIES_HOUSE_API_KEY }}

  AZURE_WORKFLOW_STORAGE_ACCOUNT: ${{ secrets.AZURE_WORKFLOW_STORAGE_ACCOUNT }}
  AZURE_WORKFLOW_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_WORKFLOW_STORAGE_ACCESS_KEY }}
  AZURE_WORKFLOW_FILESHARE_NAME: ${{ secrets.AZURE_WORKFLOW_FILESHARE_NAME }}
  AZURE_WORKFLOW_EXPORT_FOLDER: ${{ secrets.AZURE_WORKFLOW_EXPORT_FOLDER }}
  AZURE_WORKFLOW_IMPORT_FOLDER: ${{ secrets.AZURE_WORKFLOW_IMPORT_FOLDER }}

  AZURE_PORTAL_STORAGE_ACCOUNT: ${{ secrets.AZURE_PORTAL_STORAGE_ACCOUNT }}
  AZURE_PORTAL_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_PORTAL_STORAGE_ACCESS_KEY }}
  AZURE_PORTAL_FILESHARE_NAME: ${{ secrets.AZURE_PORTAL_FILESHARE_NAME }}
  AZURE_PORTAL_EXPORT_FOLDER: ${{ secrets.AZURE_PORTAL_EXPORT_FOLDER }}

jobs:

  api-tests:
    #needs: [portal, deal-api]
    name: "Run API tests in Compose"
    runs-on: ubuntu-latest
    steps:
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_DEV_REGISTRY }}
        username: ${{ secrets.ACR_DEV_USERNAME }}
        password: ${{ secrets.ACR_DEV_PASSWORD }}
    - name: Pull deal-api
      run: |
        docker pull ${{ secrets.ACR_DEV_REGISTRY }}/deal-api:${{ env.TAG }}
        docker tag ${{ secrets.ACR_DEV_REGISTRY }}/deal-api:${{ env.TAG }} dtfs/deal-api
    - name: Pull portal
      run: |
        docker pull ${{ secrets.ACR_DEV_REGISTRY }}/portal:${{ env.TAG }}
        docker tag ${{ secrets.ACR_DEV_REGISTRY }}/portal:${{ env.TAG }} dtfs/portal
    - name: Start Docker Compose
      run: |
        docker-compose up -d
        echo "waiting 10 seconds to ensure mongo db has started before we run integration tests against it.."
        sleep 10
    - name: Load mock data
      run: |
        cd utils/mock-data-loader
        npm install
        node ./re-insert-mocks.js
    - name: Run API tests
      run: |
        docker exec deal-api /bin/sh ./bin/api-test.sh

  end-to-end-tests:
    #needs: [portal, deal-api]
    name: "Run end-to-end tests in Compose"
    runs-on: ubuntu-latest
    steps:
    - uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_DEV_REGISTRY }}
        username: ${{ secrets.ACR_DEV_USERNAME }}
        password: ${{ secrets.ACR_DEV_PASSWORD }}
    - name: Pull deal-api
      run: |
        docker pull ${{ secrets.ACR_DEV_REGISTRY }}/deal-api:${{ env.TAG }}
        docker tag ${{ secrets.ACR_DEV_REGISTRY }}/deal-api:${{ env.TAG }} dtfs/deal-api
    - name: Pull portal
      run: |
        docker pull ${{ secrets.ACR_DEV_REGISTRY }}/portal:${{ env.TAG }}
        docker tag ${{ secrets.ACR_DEV_REGISTRY }}/portal:${{ env.TAG }} dtfs/portal
    - name: Start Docker Compose
      run: |
        docker-compose up -d
        echo "waiting 10 seconds to ensure mongo db has started before we run integration tests against it.."
        sleep 10
    - name: Load mock data
      run: |
        cd utils/mock-data-loader
        npm install
        node ./re-insert-mocks.js
        pwd
    - name: Run e2e tests
      run: |
        pwd
        cd ${{ env.GITHUB_WORKSPACE }}
        pwd
        npm install && npx cypress run --spec "cypress/integration/**/*.spec.js" --config video=false
