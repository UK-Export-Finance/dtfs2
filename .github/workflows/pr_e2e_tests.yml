name: PR - End-To-End tests

on:
  pull_request:
    branches: [ main, main-amendments ]
    paths:
    - 'gef-ui/**'
    - 'portal/**'
    - 'portal-api/**'
    - 'trade-finance-manager-ui/**'
    - 'trade-finance-manager-api/**'
    - 'reference-data-proxy/**'
    - 'dtfs-central-api/**'
    - 'e2e-tests/**'
    - 'utils/mock-data-loader/**'

env:
  environment: dev
  credentials: ${{ secrets.AZURE_DIGITAL_DEV }}
  AZURE_PORTAL_STORAGE_ACCOUNT: ${{ secrets.AZURE_PORTAL_STORAGE_ACCOUNT }}
  AZURE_PORTAL_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_PORTAL_STORAGE_ACCESS_KEY }}
  AZURE_PORTAL_FILESHARE_NAME: ${{ secrets.AZURE_PORTAL_FILESHARE_NAME }}
  AZURE_PORTAL_EXPORT_FOLDER: ${{ secrets.AZURE_PORTAL_EXPORT_FOLDER }}
  GOV_NOTIFY_API_KEY: ${{ secrets.GOV_NOTIFY_API_KEY }}
  GOV_NOTIFY_EMAIL_RECIPIENT: ${{ secrets.GOV_NOTIFY_EMAIL_RECIPIENT }}
  JWT_SIGNING_KEY: ${{ secrets.JWT_SIGNING_KEY }}
  JWT_VALIDATING_KEY: ${{ secrets.JWT_VALIDATING_KEY }}
  ORDNANCE_SURVEY_API_URL: "https://api.os.co.uk"
  ORDNANCE_SURVEY_API_KEY: ${{ secrets.ORDNANCE_SURVEY_API_KEY }}
  MULESOFT_API_KEY: ${{ secrets.MULESOFT_API_KEY }}
  MULESOFT_API_SECRET: ${{ secrets.MULESOFT_API_SECRET }}
  MULESOFT_API_NUMBER_GENERATOR_URL: ${{ secrets.MULESOFT_API_NUMBER_GENERATOR_URL }}
  MULESOFT_API_ACBS_DEAL_URL: ${{ secrets.MULESOFT_API_ACBS_DEAL_URL }}
  MULESOFT_API_ACBS_FACILITY_URL: ${{ secrets.MULESOFT_API_ACBS_FACILITY_URL }}
  MULESOFT_API_PARTY_DB_KEY: ${{ secrets.MULESOFT_API_PARTY_DB_KEY }}
  MULESOFT_API_PARTY_DB_SECRET: ${{ secrets.MULESOFT_API_PARTY_DB_SECRET }}
  MULESOFT_API_PARTY_DB_URL: ${{ secrets.MULESOFT_API_PARTY_DB_URL }}
  MULESOFT_API_CURRENCY_EXCHANGE_RATE_URL: ${{ secrets.MULESOFT_API_CURRENCY_EXCHANGE_RATE_URL }}
  MULESOFT_API_CURRENCY_EXCHANGE_RATE_KEY: ${{ secrets.MULESOFT_API_CURRENCY_EXCHANGE_RATE_KEY }}
  MULESOFT_API_CURRENCY_EXCHANGE_RATE_SECRET: ${{ secrets.MULESOFT_API_CURRENCY_EXCHANGE_RATE_SECRET }}
  MULESOFT_API_EXPOSURE_PERIOD_URL: ${{ secrets.MULESOFT_API_EXPOSURE_PERIOD_URL }}
  MULESOFT_API_UKEF_TF_EA_URL: ${{ secrets.MULESOFT_API_UKEF_TF_EA_URL }}
  MULESOFT_API_UKEF_MDM_EA_URL: ${{ secrets.MULESOFT_API_UKEF_MDM_EA_URL }}
  MULESOFT_API_UKEF_MDM_EA_KEY: ${{ secrets.MULESOFT_API_UKEF_MDM_EA_KEY }}
  MULESOFT_API_UKEF_MDM_EA_SECRET: ${{ secrets.MULESOFT_API_UKEF_MDM_EA_SECRET }}
  SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
  COMPANIES_HOUSE_API_URL: "https://api.companieshouse.gov.uk"
  COMPANIES_HOUSE_API_KEY: ${{ secrets.COMPANIES_HOUSE_API_KEY }}
  UKEF_TFM_API_SYSTEM_KEY: ${{ secrets.UKEF_TFM_API_SYSTEM_KEY }}
  UKEF_TFM_API_REPORTS_KEY: ${{ secrets.UKEF_TFM_API_REPORTS_KEY }}
  ESTORE_URL: ${{ secrets.ESTORE_URL }}

jobs:
  set-environment:
    name: Set Environment
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ env.environment }}
    steps:
    - name: Initialise Environment
      run: |
        echo Setting environment to ${{ env.environment }}

  # Run GEF-UI End-To-End tests
  # these tests are part of e2e-tests/gef-ui
  gef-tests:
    name: "Run - GEF-UI E2E tests"
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4 ]
    # Cancel Previous runs
    concurrency:
      group: gef-${{ github.workflow }}-${{ github.ref }}-${{ matrix.containers }}
      cancel-in-progress: true
    steps:
    - uses: actions/checkout@v3
    - name: Start Docker Compose
      run: |
        source secrets/set_jwt_keypair.sh
        docker-compose -f docker-compose.gha.yml up --build -d
    - name: Sleep for 30 seconds
      run: sleep 30s
    - name: Load mock data
      run: |
        cd utils/mock-data-loader
        npm ci --legacy-peer-deps
        node ./re-insert-mocks.js
        pwd
    - name: Wake up Azure Function
      run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'
    - name: Run GEF-UI e2e tests
      uses: cypress-io/github-action@v4
      with:
        record: true
        parallel: true
        browser: chrome
        group: 'GEF UI'
        project: ./e2e-tests/gef
        config: video=false
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Save Cypress screenshots
      if: ${{ failure() }}
      uses: actions/upload-artifact@main
      with:
        name: screenshots
        path: './cypress/screenshots'
    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#dtfs-github-actions'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()

  portal-tests:
    # Cancel Previous runs
    # concurrency:
    #   group: portal-${{ github.workflow }}-${{ github.ref }}
    #   cancel-in-progress: true

    name: "Run - Portal E2E tests"
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4 ]

    steps:
    - uses: actions/checkout@v3
    - name: Start Docker Compose
      run: |
        source secrets/set_jwt_keypair.sh
        docker-compose -f docker-compose.gha.yml up --build -d
    - name: Sleep for 30 seconds
      run: sleep 30s
    - name: Load mock data
      run: |
        cd utils/mock-data-loader
        npm ci --legacy-peer-deps
        node ./re-insert-mocks.js
        pwd
    - name: Wake up Azure Function
      run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'
    - name: Run e2e tests
      uses: cypress-io/github-action@v4
      with:
        record: true
        parallel: true
        browser: chrome
        group: 'Portal UI'
        project: ./e2e-tests/portal
        config: video=false
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Save Cypress screenshots
      if: ${{ failure() }}
      uses: actions/upload-artifact@main
      with:
        name: screenshots
        path: './cypress/screenshots'
    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#dtfs-github-actions'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()

  tfm-tests:
    # Cancel Previous runs
    # concurrency:
    #   group: tfm-${{ github.workflow }}-${{ github.ref }}
    #   cancel-in-progress: true

    name: "Run - Trade Finance Manager E2E tests"
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3 ]
    steps:
    - uses: actions/checkout@v3
    - name: Start Docker Compose
      run: |
        source secrets/set_jwt_keypair.sh
        docker-compose -f docker-compose.gha.yml up --build -d
    - name: Sleep for 30 seconds
      run: sleep 30s
    - name: Load mock data
      run: |
        cd utils/mock-data-loader
        npm ci --legacy-peer-deps
        node ./re-insert-mocks.js
        pwd
    - name: Wake up Azure Function
      run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'
    - name: Run e2e tests
      uses: cypress-io/github-action@v4
      with:
        record: true
        parallel: true
        browser: chrome
        group: 'TFM UI'
        project: ./e2e-tests/trade-finance-manager
        config: video=false
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Save Cypress screenshots
      if: ${{ failure() }}
      uses: actions/upload-artifact@main
      with:
        name: screenshots
        path: './cypress/screenshots'
    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#dtfs-github-actions'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()


  tfm-submit-tests:
    # Cancel Previous runs
    # concurrency:
    #   group: tfm-submit-${{ github.workflow }}-${{ github.ref }}
    #   cancel-in-progress: true

    name: "Run - Submit to TFM End-To-End tests"
    needs: set-environment
    environment:
      name: ${{ needs.set-environment.outputs.environment }}
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3 ]

    steps:
    - uses: actions/checkout@v3
    - name: Start Docker Compose
      run: |
        source secrets/set_jwt_keypair.sh
        docker-compose -f docker-compose.gha.yml up --build -d
    - name: Sleep for 30 seconds
      run: sleep 30s
    - name: Load mock data
      run: |
        cd utils/mock-data-loader
        npm ci --legacy-peer-deps
        node ./re-insert-mocks.js
        pwd
    - name: Wake up Azure Function
      run: curl "http://localhost:7072/api/orchestrators/numbergenerator" -d '{ "entityType":"facility", "entityId":"12211" }'
    - name: Run e2e tests
      uses: cypress-io/github-action@v4
      with:
        record: true
        parallel: true
        browser: chrome
        group: 'TFM Submit'
        project: ./e2e-tests/submit-to-trade-finance-manager
        config: video=false
      env:
        CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Save Cypress screenshots
      if: ${{ failure() }}
      uses: actions/upload-artifact@main
      with:
        name: screenshots
        path: './cypress/screenshots'
    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#dtfs-github-actions'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      if: failure()