const { CryptographicallyStrongGenerator } = require('./cryptographically-strong-generator');

describe('CryptographicallyStrongGenerator', () => {
  let generator;

  beforeEach(() => {
    generator = new CryptographicallyStrongGenerator();
  });

  describe('randomHexString', () => {
    it('returns the hex string of the bytes generated by salt()', () => {
      // Act
      const hex = generator.randomHexString();

      // Assert
      expect(typeof hex).toEqual('string');
      // 128 bytes = 256 Hex characters (1 bytes = 2 Hex characters)
      expect(hex.length).toEqual(256);
      expect(hex).not.toBeNull();
    });

    it('returns unique hex on every call', () => {
      // Act
      const hex1 = generator.randomHexString();
      const hex2 = generator.randomHexString();
      const hex3 = generator.randomHexString();

      // Assert
      expect(hex1).not.toBeNull();
      expect(hex2).not.toBeNull();
      expect(hex3).not.toBeNull();

      expect(hex1).not.toEqual(hex2);
      expect(hex1).not.toEqual(hex3);
      expect(hex2).not.toEqual(hex3);
    });
  });
});
